{
	"info": {
		"_postman_id": "d86b3b85-7633-456f-88ee-fd81b0f0c156",
		"name": "Базовая_Медиасервис_ПДО_Портал_Монитор_Уведомления Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10292547"
	},
	"item": [
		{
			"name": "Медиасервис",
			"item": [
				{
					"name": "1. Поиск файла (file_id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"file_id\", jsonData.data.items[0]);",
									"",
									"pm.test(\"Проверяем лимит на 100\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.items.length).to.equal(100);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "system-name",
								"type": "text",
								"value": "developer"
							},
							{
								"key": "system-password",
								"type": "text",
								"value": "demo"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/find",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"find"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Получить файл",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Файл найден\", function () {",
									"    pm.expect(jsonData.data.length).to.above(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "system-name",
								"type": "text",
								"value": "developer"
							},
							{
								"key": "system-password",
								"type": "text",
								"value": "demo"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [{{file_id}}]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/get",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Получить файл с доп.параметрами",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Файл найден\", function () {",
									"    pm.expect(jsonData.data.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Проверяем параметры изображения\", function () {",
									"    pm.expect(jsonData.data.first().files.first().size).to.above(0);",
									"    pm.expect(jsonData.data.first().files.first().width).to.above(0);",
									"    pm.expect(jsonData.data.first().files.first().height).to.above(0);",
									"    pm.expect(jsonData.data.first().files.first().md5).to.not.equal(null);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "system-name",
								"type": "text",
								"value": "developer"
							},
							{
								"key": "system-password",
								"type": "text",
								"value": "demo"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [{{file_id}}],\n    \"extra_img_data\":  true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/get",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Добавить PDF-файл",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"file_id\", jsonData.data.id);",
									"pm.environment.set(\"file_id_good2\", jsonData.data.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "System-Name",
								"value": "developer",
								"type": "text"
							},
							{
								"key": "System-Password",
								"value": "demo",
								"type": "text"
							},
							{
								"key": "debug-enabled",
								"value": "1",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ssoid\": \"{{ssoid}}\",\n    \"file_value\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/add",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Добавить PNG-файл",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"file_id\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "system-name",
								"value": "developer",
								"type": "text"
							},
							{
								"key": "system-password",
								"value": "demo",
								"type": "text"
							},
							{
								"key": "debug-enabled",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ssoid\": \"{{ssoid}}\",\n    \"file_value\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/add",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Добавить JPG-файл",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"file_id\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "system-name",
								"value": "developer",
								"type": "text"
							},
							{
								"key": "system-password",
								"value": "demo",
								"type": "text"
							},
							{
								"key": "debug-enabled",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ssoid\": \"{{ssoid}}\",\n    \"file_value\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/add",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Поиск файла созданного час назад",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"file_id_hourAgo\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"if (pm.environment.get('gorod') == 'https://gorod2.mos.ru')   ",
									"{",
									"    //для г2 делаем 2 час",
									"    pm.environment.set(\"timestamp\", Math.round(Date.now()/1000-60*60*2, 0));",
									"} ",
									"else",
									"{",
									"    //для остальных 24 часа",
									"    pm.environment.set(\"timestamp\", Math.round(Date.now()/1000-60*60*24, 0));",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "system-name",
								"value": "developer",
								"type": "text"
							},
							{
								"key": "system-password",
								"value": "demo",
								"type": "text"
							},
							{
								"key": "debug-enabled",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"<=\", \"t_bunch.created_at\", {{timestamp}}\n            ],\n            [\n                \"!=\", \"mime_type\", \"application/pdf\"\n            ],\n            [\n                \"=\", \"ssoid\", \"{{ssoid}}\"\n            ]\n        ]\n    },\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/find",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"find"
							]
						},
						"description": "Send PDF file"
					},
					"response": []
				},
				{
					"name": "8. Получить файл",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"file_url\", pm.environment.get(\"gorod\") + \"/api/media\" + jsonData.data.first().files.first().path);",
									"",
									"//pm.environment.set(\"file_url\", \"http://v2.gorod.proitr.ru/api/media/file/direct?id=7b9bc1b3-9778-4436-994b-bfa24b4cb3ec\");",
									"",
									"pm.test(\"Проверяем document_id\", function () {",
									"    pm.expect(jsonData.data.first().files.first().document_id).to.not.null;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//1000911 - портретная на тесте",
									"//pm.environment.set(\"file_id\", \"1001038\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "system-name",
								"value": "developer",
								"type": "text"
							},
							{
								"key": "system-password",
								"value": "demo",
								"type": "text"
							},
							{
								"key": "debug-enabled",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\":[{{file_id_hourAgo}}]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/get",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "9. Проверить файл в ЦХЭДе",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Отключаем проверку на код 200",
									"//pm.environment.set(\"test_code_200\", 'false');",
									"",
									"//Убираем очистку кэша",
									"pm.request.url.query.remove('clear_cache');"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "debug-enabled",
								"value": "1",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{file_url}}",
							"host": [
								"{{file_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "10. rotate -90",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "system-name",
								"value": "developer",
								"type": "text"
							},
							{
								"key": "system-password",
								"value": "demo",
								"type": "text"
							},
							{
								"key": "debug-enabled",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{file_id}},\n    \"rotate\": -90\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/update",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "11. rotate +90",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "system-name",
								"value": "developer",
								"type": "text"
							},
							{
								"key": "system-password",
								"value": "demo",
								"type": "text"
							},
							{
								"key": "debug-enabled",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{file_id}},\n    \"rotate\": 90\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/update",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "12. file/update commited true",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "system-name",
								"value": "developer",
								"type": "text"
							},
							{
								"key": "system-password",
								"value": "demo",
								"type": "text"
							},
							{
								"key": "debug-enabled",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{file_id}},\n    \"committed\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/update",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "13. file/update commited false",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "system-name",
								"value": "developer",
								"type": "text"
							},
							{
								"key": "system-password",
								"value": "demo",
								"type": "text"
							},
							{
								"key": "debug-enabled",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{file_id}},\n    \"committed\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{media}}/bunch/update",
							"host": [
								"{{media}}"
							],
							"path": [
								"bunch",
								"update"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ПДО",
			"item": [
				{
					"name": "Адреса",
					"item": [
						{
							"name": "Базовые запросы",
							"item": [
								{
									"name": "Поиск адресов",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.be.above(270000);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.first().id);",
													"pm.environment.set(\"region_id\", jsonData.data.first().region.id);",
													"pm.environment.set(\"district_id\", jsonData.data.first().region.district.id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().unom).to.above(0);",
													"    pm.expect(jsonData.data.first().region.id).to.above(0);",
													"    pm.expect(jsonData.data.first().region.district.id).to.above(0);",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.be.oneOf([\"Polygon\", \"MultiPolygon\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск адреса по уному",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.be.equal(1);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"address.unom\": \"24343\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск адреса по параметрам",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.be.above(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"address.unom\": \"65081\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Находится ли точка в Москве",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Проверка точки\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.is_in_moscow).to.equal(true);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"long\": 37.548240,\n    \"lat\": 55.744514\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/is-in-moscow",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"is-in-moscow"
											]
										}
									},
									"response": []
								},
								{
									"name": "Находится ли точка в районе, по которому можно отправить сообщение",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Проверка точки\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.is_applicable).to.equal(true);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"long\": 37.548240,\n    \"lat\": 55.744514\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/is-applicable",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"is-applicable"
											]
										}
									},
									"response": []
								},
								{
									"name": "Находится ли точка в районе, по которому нельзя отправить сообщение",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Проверка точки\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.is_applicable).to.equal(false);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"long\": 30.548240,\n    \"lat\": 30.744514\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/is-applicable",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"is-applicable"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Поиск по тексту",
							"item": [
								{
									"name": "Поиск \"соломённой 10а\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items);",
													"",
													"pm.test(\"Найден 1 адрес\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(1);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"search\": \"соломённой 10а\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    pm.expect(jsonData.data[0].name).to.oneOf([\"проезд Соломенной Сторожки, дом 10А\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"соломённая 10\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items);",
													"",
													"pm.test(\"Найдено 2 адреса\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(2);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"search\": \"соломённая 10\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data[0].name).to.oneOf([\"проезд Соломенной Сторожки, дом 10\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"тополевая аллаея\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items);",
													"",
													"pm.test(\"Адреса найдены \" + jsonData.data.total + \", проверка что больше 15\", function () {",
													"    pm.expect(jsonData.data.total).to.least(15);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"search\": \"тополевая аллея\"\n    },\n    \"limit\": 100\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    pm.expect(jsonData.data[0].name.substring(0,15)).to.equal(\"Тополёвая аллея\");",
													"    pm.expect(jsonData.data[1].name.substring(0,15)).to.equal(\"Тополёвая аллея\");",
													"    pm.expect(jsonData.data[2].name.substring(0,15)).to.equal(\"Тополёвая аллея\");",
													"    pm.expect(jsonData.data[3].name.substring(0,15)).to.equal(\"Тополёвая аллея\");",
													"    pm.expect(jsonData.data[4].name.substring(0,15)).to.equal(\"Тополёвая аллея\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"ангелов переулок 6\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(4);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"search\": \"ангелов переулок 6\"\n    },\n    \"limit\": 100\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    pm.expect(jsonData.data[0].name).to.equal(\"Ангелов переулок, дом 6\");",
													"    pm.expect(jsonData.data[1].name.substring(0,16)).to.equal(\"Ангелов переулок\");",
													"    pm.expect(jsonData.data[2].name.substring(0,16)).to.equal(\"Ангелов переулок\");",
													"    pm.expect(jsonData.data[3].name.substring(0,16)).to.equal(\"Ангелов переулок\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"малыгина\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(42);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\"region.id\": 74},\n            {\"district.id\": 3}\n        ],\n        \"search\": \"малыгина\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    pm.expect(jsonData.data[0].name.substring(0,14)).to.equal(\"улица Малыгина\");",
													"    pm.expect(jsonData.data[1].name.substring(0,14)).to.equal(\"улица Малыгина\");",
													"    pm.expect(jsonData.data[2].name.substring(0,14)).to.equal(\"улица Малыгина\");",
													"    pm.expect(jsonData.data[3].name.substring(0,14)).to.equal(\"улица Малыгина\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"малыгина\" в другом округе",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\"region.id\": 64},\n            {\"district.id\": 6}\n        ],\n        \"search\": \"малыгина\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"молостовых 3к1\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items);",
													"",
													"pm.test(\"Должно быть найдено 2 адреса\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(2);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"search\": \"молостовых 3к1\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    pm.expect(jsonData.data[0].name).to.equal(\"улица Молостовых, дом 3, корпус 1\");",
													"    pm.expect(jsonData.data[1].name).to.equal(\"улица Молостовых, дом 3, корпус 1, строение 2\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"молостовых д.3 к.1\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.above(0);",
													"});",
													"",
													"pm.test(\"Первый в списке адрес Молостовых 3к1\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.first()).to.equal(73929);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n        ],\n        \"search\": \"Молостовых д.3 к.1\"\n    },\n    \"limit\": 25\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    pm.expect(jsonData.data[0].name).to.equal(\"улица Молостовых, дом 3, корпус 1\");",
													"    pm.expect(jsonData.data[1].name).to.equal(\"улица Молостовых, дом 3, корпус 1, строение 2\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"молостовых дом 3 корпус 1\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.above(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n        ],\n        \"search\": \"улица Молостовых, дом 3, корпус 1\"\n    },\n    \"limit\": 25\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    pm.expect(jsonData.data[0].name).to.equal(\"улица Молостовых, дом 3, корпус 1\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"молостовых дом 2 корпус 1\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.above(0);",
													"});",
													"",
													"pm.test(\"Первый в списке адрес Молостовых 2к1\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.length).to.equal(1);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n        ],\n        \"search\": \"улица Молостовых, дом 2, корпус 1\"\n    },\n    \"limit\": 25\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    pm.expect(jsonData.data[0].name).to.equal(\"улица Молостовых, дом 2, корпус 1\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"арбат\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.above(0);",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"search\": \"улица арбат\"\n    },\n    \"limit\": 25\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    pm.expect(jsonData.data[0].name.substring(0,11)).to.equal(\"улица Арбат\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Поиск ближайших",
							"item": [
								{
									"name": "Поиск адресов",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data[Math.floor(Math.random()*jsonData.data.length)]);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.length).to.be.equal(3);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"long\": 37.562946708,\n    \"lat\": 55.809730974,\n    \"radius\": 50,\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/nearest",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"nearest"
											]
										}
									},
									"response": []
								},
								{
									"name": "Координата без адреса",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"//pm.environment.set(\"address_id\", jsonData.data[Math.floor(Math.random()*jsonData.data.length)]);",
													"",
													"pm.test(\"Адресов нет\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.length).to.be.equal(1);",
													"pm.variables.get(\"variable_key\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"long\": 37.79762722672216,\n    \"lat\": 55.7794807006037,\n    \"radius\": 500,\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/nearest",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"nearest"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка не земельных участков",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"//pm.environment.set(\"address_id\", jsonData.data[Math.floor(Math.random()*jsonData.data.length)]);",
													"",
													"//\"id\": 135460\"name\": \"город Москва, Щёлковское шоссе, владение 90В\" - это земельный участок,",
													"//\"id\": 117340, \"name\": \"Щёлковское шоссе, дом 90, корпус 1\" - это здание",
													"",
													"pm.test(\"Найдено здание, а не земельный участок\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().unom).to.be.equal(5024600);",
													"});",
													"",
													"pm.test(\"Найден всего 1 адрес\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.length).to.be.equal(1);",
													"});",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"long\": 37.82308428350248,\n    \"lat\": 55.811602968418036,\n    \"radius\": 10,\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/nearest",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"nearest"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск адресов в мобилке",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data[Math.floor(Math.random()*jsonData.data.length)]);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.length).to.above(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"lat\": 55.809730974,\n    \"long\": 37.562946708,\n    \"radius\": 100,\n    \"limit\": 1,\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"facility.visible_portal\": 1,\n                \"facility.deleted_at\": null\n            }\n        ]\n    },\n    \"sort\": {\n        \"facility.name\": \"asc\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/nearest",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"nearest"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск адреса PDPSRAZR2-4233",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data[Math.floor(Math.random()*jsonData.data.length)]);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.length).to.above(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"lat\": 55.809730974,\n    \"long\": 37.562946708,\n    \"radius\": 100,\n    \"limit\": 1,\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"facility.visible_portal\": 1,\n                \"facility.deleted_at\": null\n            }\n        ]\n    },\n    \"sort\": {\n        \"facility.name\": \"asc\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/nearest",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"nearest"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Атрибуты",
					"item": [
						{
							"name": "Список атрибутов",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
											"",
											"pm.test(\"Атрибуты найдены\", function () {",
											"    pm.expect(jsonData.data.items.length).to.above(700);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"sort\": {\r\n        \"id\": \"asc\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/attribute/find",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"attribute",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "Атрибуты по дворам",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
											"",
											"pm.test(\"Атрибуты найдены\", function () {",
											"    pm.expect(jsonData.data.items.length).to.above(0);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            [\"=\", \"category_id\", {{category_id}}]\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/attribute/find",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"attribute",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение атрибута",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"category_id\", jsonData.data.first().category_id);",
											"",
											"pm.test(\"Атрибуты найдены\", function () {",
											"    pm.expect(jsonData.data.length).to.above(0);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\":[{{id}}]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/attribute/get",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"attribute",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Атрибуты по дворам Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
											"",
											"pm.test(\"Атрибуты найдены\", function () {",
											"    pm.expect(jsonData.data.items.length).to.above(0);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            [\"=\", \"category_id\", {{category_id}}],\r\n            [\"=\", \"is_dictionary\", 1]\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/attribute/find",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"attribute",
										"find"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Категории",
					"item": [
						{
							"name": "Поиск категорий",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"category_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
											"pm.environment.set(\"category_ids\", jsonData.data.items);",
											"",
											"pm.test(\"Категории найдены\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.items.length).to.equal(36);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 100\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/category/find",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"category",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение категории",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Категории найдены\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.length).to.equal(36);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\":[{{category_ids}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/category/get",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"category",
										"get"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Объекты",
					"item": [
						{
							"name": "01. Дворы (АСУ ОДС)",
							"item": [
								{
									"name": "Многоадресные",
									"item": [
										{
											"name": "Поиск двора по фразе Соломенная 10",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"pm.environment.set(\"items\", jsonData.data.items);",
															"",
															"pm.test(\"На соломенной 10 найдено 2 объекта\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.total).to.equal(2);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            {\r\n                \"category.id\": 1\r\n            }\r\n        ],\r\n        \"search\": \"соломенной 10\"\r\n    },\r\n    \"limit\": 10\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Двор с тремя адресами (Соломенной 10)",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"У объекта \" + pm.environment.get(\"object_id\") + \" один адрес\", function () {",
															"    pm.expect(jsonData.data.first().address.length).to.equal(1);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск двора по УНОМу 24344",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"pm.environment.set(\"items\", jsonData.data.items);",
															"",
															"pm.test(\"Найден объект \" + pm.environment.get(\"object_id\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.items.first()).to.equal(pm.environment.get(\"object_id\"));",
															"    pm.expect(jsonData.data.total).to.equal(1);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"1\"\n            },\n            {\n                \"address.unom\": \"24344\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка названия",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"У объекта \" + pm.environment.get(\"object_id\") + \" один адрес\", function () {",
															"    pm.expect(jsonData.data.first().address.length).to.equal(1);",
															"});",
															"",
															"pm.test(\"Проверяем название: \" + jsonData.data.first().name, function () {",
															"    pm.expect(jsonData.data.first().name).to.equal(\"проезд Соломенной Сторожки, дом 10А\");",
															"});",
															"",
															"var a = jsonData.data.first().facilityAttributeSet;",
															"",
															"for (var i = 0; i < a.length; i++) ",
															"{",
															"    if (a[i].code == 'name_for_page')",
															"    {  ",
															"        pm.test(\"Название для страницы: \" + a[i].value, function () {",
															"            pm.expect(a[i].value).to.equal(\"Дворовая территория\");",
															"        });",
															"    }",
															"",
															"    if (a[i].code == 'name_for_search')",
															"    {  ",
															"        pm.test(\"Название для страницы: \" + a[i].value, function () {",
															"            pm.expect(a[i].value).to.equal(\"проезд Соломенной Сторожки, дом 10А\");",
															"        });",
															"    }",
															"",
															"    if (a[i].code == 'name_for_form')",
															"    {  ",
															"        pm.test(\"Название для формы сообщить: \" + a[i].value, function () {",
															"            pm.expect(a[i].value).to.equal(\"проезд Соломенной Сторожки, дом 10А\");",
															"        });",
															"    }",
															"",
															"    if (a[i].code == 'name_for_message')",
															"    {  ",
															"        pm.test(\"Название для сообщения: \" + a[i].value, function () {",
															"            pm.expect(a[i].value).to.equal(\"проезд Соломенной Сторожки, дом 10А\");",
															"        });",
															"    }",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}],\r\n    \"scope\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ближайшие дворы",
									"item": [
										{
											"name": "Поиск ближайших на соломенной",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Найдено \"+jsonData.data.length+\" объекта, а должно 4\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.length).to.least(3);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"long\":  37.563233238,                            \n    \"lat\": 55.8091133,\n    \"radius\": 60,\n    \"limit\": 10,\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"1\"\n            }\n        ]\n    }\n\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/nearest",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"nearest"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Работы",
									"item": [
										{
											"name": "Поиск дворов с работами",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что больше 0\", function () {",
															"    pm.expect(jsonData.data.total).to.least(0);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 1\n            ],\n            [\n                \">\", \"works.id\", 0\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск дворов миллион деревьев",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что больше 0\", function () {",
															"    pm.expect(jsonData.data.total).to.least(0);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 1\n            ],\n            [\n                \">\", \"works_million_trees.id\", 0\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск двора Волоколамское 6",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items);",
															"",
															"pm.test(\"Объекты найдены\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.total).to.equal(2);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            {\r\n                \"category.id\": 2\r\n            }\r\n        ],\r\n        \"search\": \"соломённой 10\"\r\n    },\r\n    \"limit\": 10\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Поиск дворов",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"pm.environment.set(\"yard_total\", jsonData.data.total);",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что больше 25000\", function () {",
													"    pm.expect(jsonData.data.total).to.least(35000);",
													"});",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что меньше 50000\", function () {",
													"    pm.expect(jsonData.data.total).to.below(50000);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\",  \"is_real\", 1\n            ],\n            [\n                \"=\", \"category.id\", 1\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"asc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту с полигоном",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.be.oneOf([\"Point\", \"Polygon\", \"MultiPolygon\"]);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//Мультиполигон",
													"//pm.environment.set(\"object_id\", 1256);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка страницы на портале",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password_b}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username_b}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{file_url}}",
											"host": [
												"{{file_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск двора в ТиНАО",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", должно быть столько же сколько и домов, проверка что больше 1700\", function () {",
													"    pm.expect(jsonData.data.total).to.above(1700);",
													"});",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что меньше 2500\", function () {",
													"    pm.expect(jsonData.data.total).to.below(2500);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 1\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"asc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту с полигоном",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.be.oneOf([\"Point\", \"Polygon\", \"MultiPolygon\"]);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//Мультиполигон",
													"//pm.environment.set(\"object_id\", 1256);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск двора по УНОМу",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Найден 1 объект\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(1);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"1\"\n            },\n            {\n                \"address.unom\": \"24343\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту с полигоном",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.be.oneOf([\"Point\", \"Polygon\", \"MultiPolygon\"]);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//Мультиполигон",
													"//pm.environment.set(\"object_id\", 1256);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "02. Дома (ГИС РД)",
							"item": [
								{
									"name": "Поиск домов в Москве и ТиНАО",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"//На первом портале 35169",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что больше 30000, на первом портале 35176\", function () {",
													"    pm.expect(jsonData.data.total).to.least(30000);",
													"});",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что меньше 40000, на первом портале 35176\", function () {",
													"    pm.expect(jsonData.data.total).to.below(40000);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 2\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.be.oneOf([\"Point\"]);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//Мультиполигон",
													"//pm.environment.set(\"object_id\", 1256);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка страницы на портале",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//var body = pm.response.body();",
													"",
													"//pm.test(\"Проверка названия\", function () {",
													"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
													"//});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password_b}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username_b}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cache-Control",
												"value": "no-cache",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{file_url}}",
											"host": [
												"{{file_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск домов Спецфонд в Москве",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"    ",
													"pm.test(\"Объектов спецфонда: \" + jsonData.data.total + \", проверка что больше 500\", function () {",
													"    pm.expect(jsonData.data.total).to.above(500);",
													"});",
													"",
													"pm.test(\"Объектов спецфонда: \" + jsonData.data.total + \", проверка что меньше 1000\", function () {",
													"    pm.expect(jsonData.data.total).to.below(1000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 2\n            ],\n            [\n                \"in\",\n                \"district.id\", [1,2,3,4,5,6,7,8,9,10]\n            ]\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 769,\n                \"rule\": [\"=\", \"value\", \"спецфонд\"]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.be.oneOf([\"Point\"]);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//Мультиполигон",
													"//pm.environment.set(\"object_id\", 1256);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск домов в ТиНАО, не спецфонд",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что больше 1400\", function () {",
													"    pm.expect(jsonData.data.total).to.above(1400);",
													"});",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что меньше 2500\", function () {",
													"    pm.expect(jsonData.data.total).to.below(2500);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 2\n            ],\n            [\n                \"in\",\n                \"district.id\", [11, 12]\n            ]\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 769,\n                \"rule\": [\"!=\", \"value\", \"спецфонд\"]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.be.oneOf([\"Point\"]);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//Мультиполигон",
													"//pm.environment.set(\"object_id\", 1256);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск дома по УНОМу",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Найден 1 объект\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(1);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"2\"\n            },\n            {\n                \"address.unom\": \"24343\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск дома по УНОМу включая удаленные",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items.first());",
													"",
													"if (pm.environment.get('gorod') == 'https://gorod2.mos.ru') ",
													"{",
													"    pm.test(\"Найден 1 объект\", function () {",
													"        pm.expect(jsonData.data.total).to.equal(1);",
													"    });",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"2\"\n            },\n            {\n                \"address.unom\": \"5308942\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10,\n    \"scope\": \"admin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск по address_id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Найдено объектов \" + jsonData.data.total, function () ",
													"{    ",
													"    pm.expect(jsonData.data.total).to.above(0);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"2\"\n            },\n            {\n                \"address.id\": \"1778\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка названий объекта",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Проверяем название: \" + jsonData.data.first().name, function () {",
													"    pm.expect(jsonData.data.first().name).to.equal(\"Соломенной Сторожки пр., д.10\");",
													"});",
													"",
													"var a = jsonData.data.first().facilityAttributeSet;",
													"",
													"for (var i = 0; i < a.length; i++) ",
													"{",
													"    if (a[i].code == 'name_for_page')",
													"    {  ",
													"        pm.test(\"Название для страницы: \" + a[i].value, function () {",
													"            pm.expect(a[i].value).to.equal(\"Многоквартирный дом\");",
													"        });",
													"    }",
													"",
													"    if (a[i].code == 'name_for_search')",
													"    {  ",
													"        pm.test(\"Название для страницы: \" + a[i].value, function () {",
													"            pm.expect(a[i].value).to.equal(\"проезд Соломенной Сторожки, дом 10\");",
													"        });",
													"    }",
													"",
													"    if (a[i].code == 'name_for_message')",
													"    {  ",
													"        pm.test(\"Название для сообщения: \" + a[i].value, function () {",
													"            pm.expect(a[i].value).to.equal(\"проезд Соломенной Сторожки, дом 10\");",
													"        });",
													"    }",
													"",
													"    if (a[i].code == 'name_for_form')",
													"    {  ",
													"        pm.test(\"Название для формы сообщить: \" + a[i].value, function () {",
													"            pm.expect(a[i].value).to.equal(\"проезд Соломенной Сторожки, дом 10\");",
													"        });",
													"    }",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}],\r\n    \"scope\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "03. Дороги (АСУ ОДС)",
							"item": [
								{
									"name": "Ближайщие",
									"item": [
										{
											"name": "Точка в дороге",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Найдено 2 объекта\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.length).to.equal(1);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"long\": 37.556066540605,\n    \"lat\": 55.777253139962,\n    \"radius\": 100,\n    \"limit\": 20,\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"3\"\n            },\n            {\n                \"distance\": \"0\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/nearest",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"nearest"
													]
												}
											},
											"response": []
										},
										{
											"name": "Точка рядом с дорогой",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"//pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Найдено 0 объектов\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.length).to.equal(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"long\": 37.55729038375,\n    \"lat\": 55.777872968479,\n    \"radius\": 100,\n    \"limit\": 20,\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"3\"\n            },\n            {\n                \"distance\": \"0\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/nearest",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"nearest"
													]
												}
											},
											"response": []
										},
										{
											"name": "Остановка 365310 в дороге",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Найден 1 объект\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.length).to.equal(1);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{                    \n    \"long\": 37.75512219,\n    \"lat\": 55.69675035,\n    \"radius\": 100,\n    \"limit\": 20,\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"3\"\n            },\n            {\n                \"distance\": \"0\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/nearest",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"nearest"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Проверка региона",
									"item": [
										{
											"name": "Поиск Хлобыстова улица",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items);",
															"",
															"pm.test(\"Объекты найдены\", function () {",
															"    pm.expect(jsonData.data.total).to.equal(2);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            {\r\n                \"category.id\": 3\r\n            }\r\n        ],\r\n        \"search\": \"Хлобыстова улица\"\r\n    },\r\n    \"limit\": 10\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Хлобыстова улица",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Проверка названия маршрута\", function () {",
															"    pm.expect(jsonData.data.first().name).to.equal(\"Хлобыстова улица\");",
															"});",
															"",
															"/*",
															"pm.test(\"Маршрут 1001 не удален\", function () {",
															"    pm.expect(jsonData.data.first().deleted_at).to.equal(null);",
															"});",
															"",
															"pm.test(\"У маршрута 4 направления\", function () {",
															"    pm.expect(jsonData.data.first().route_trips.length).to.equal(4);",
															"});",
															"",
															"pm.test(\"Первое направление Киевский - Торговый центр\", function () {",
															"    pm.expect(jsonData.data.first().route_trips.first().name).to.equal(\"Киевский - Торговый центр\");",
															"});",
															"*/"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Поиск дорог",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"//На первом портале 7945",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что больше 7000, на первом портале 7950\", function () {",
													"    pm.expect(jsonData.data.total).to.least(7000);",
													"});",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что меньше 8000, на первом портале 7950\", function () {",
													"    pm.expect(jsonData.data.total).to.below(8000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"3\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту с полигоном",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.be.oneOf([\"Point\", \"Polygon\", \"MultiPolygon\"]);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//Мультиполигон",
													"//pm.environment.set(\"object_id\", 1256);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка страницы на портале",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//var body = pm.response.body();",
													"",
													"//pm.test(\"Проверка названия\", function () {",
													"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
													"//});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"",
													"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password_b}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username_b}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{file_url}}",
											"host": [
												"{{file_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск дорог в ТиНАО",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"//На первом портале 7945",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что больше 2100\", function () {",
													"    pm.expect(jsonData.data.total).to.least(2100);",
													"});",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что меньше 2500\", function () {",
													"    pm.expect(jsonData.data.total).to.below(2500);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 3\n            ],\n            [\n                \"in\",\n                \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "10. Маршруты",
							"item": [
								{
									"name": "Атрибут route_type",
									"item": [
										{
											"name": "Поиск маршрутов",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объекты найдены\", function () {",
															"    pm.expect(jsonData.data.total).to.least(229);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"10\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"id desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Смотрим маршрут",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"var a = jsonData.data.first().facilityAttributeSet;",
															"var route_type_string = \"\";",
															"var route_type = -1;",
															"",
															"for (var i = 0; i < a.length; i++) {",
															"    if (a[i].code == \"route_type_string\") route_type_string = a[i].value;",
															"    if (a[i].code == \"route_type\") route_type = a[i].value;",
															"}",
															"",
															"pm.test(\"Вид маршрута: \"+route_type_string+\", код: \"+route_type, function () {",
															"    ",
															"    if (route_type_string==\"Трамвай\") pm.expect(route_type).to.equal(0);",
															"    if (route_type_string==\"Трамвай\") pm.expect(route_type).to.equal(0);",
															"    if (route_type_string==\"Автобус\") pm.expect(route_type).to.equal(3);",
															"});",
															"",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Трамвай",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"var a = jsonData.data.first().facilityAttributeSet;",
															"var route_type_string = \"\";",
															"var route_type = -1;",
															"",
															"for (var i = 0; i < a.length; i++) {",
															"    if (a[i].code == \"route_type_string\") route_type_string = a[i].value;",
															"    if (a[i].code == \"route_type\") route_type = a[i].value;",
															"}",
															"",
															"pm.test(\"Вид маршрута: \"+route_type_string+\", код: \"+route_type, function () {",
															"    if (route_type_string==\"Трамвай\") pm.expect(route_type).to.equal(0);",
															"    if (route_type_string==\"Автобус\") pm.expect(route_type).to.equal(3);",
															"    if (route_type_string==\"Троллейбус\") pm.expect(route_type).to.equal(5);",
															"});"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"//pm.environment.set(\"object_id\", 123);",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [16962]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Троллейбус",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"var a = jsonData.data.first().facilityAttributeSet;",
															"var route_type_string = \"\";",
															"var route_type = -1;",
															"",
															"for (var i = 0; i < a.length; i++) {",
															"    if (a[i].code == \"route_type_string\") route_type_string = a[i].value;",
															"    if (a[i].code == \"route_type\") route_type = a[i].value;",
															"}",
															"",
															"pm.test(\"Вид маршрута: \"+route_type_string+\", код: \"+route_type, function () {",
															"    if (route_type_string==\"Трамвай\") pm.expect(route_type).to.equal(0);",
															"    if (route_type_string==\"Автобус\") pm.expect(route_type).to.equal(3);",
															"    if (route_type_string==\"Троллейбус\") pm.expect(route_type).to.equal(5);",
															"});",
															"",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [133298]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Поиск маршрутов",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что больше 840\", function () {",
													"    pm.expect(jsonData.data.total).to.least(840);",
													"});",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что меньше 1200\", function () {",
													"    pm.expect(jsonData.data.total).to.below(1200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"10\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    //pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    //pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
													"});",
													"",
													"pm.test(\"Остановки найдены\", function () {",
													"    pm.expect(jsonData.data.first().route_stops.length).to.above(0);",
													"});",
													"",
													"pm.test(\"Направления найдены\", function () {",
													"    pm.expect(jsonData.data.first().route_trips.length).to.above(0);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 123);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка страницы на портале",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//var body = pm.response.body();",
													"",
													"//pm.test(\"Проверка названия\", function () {",
													"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
													"//});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"",
													"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password_b}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username_b}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{file_url}}",
											"host": [
												"{{file_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Маршрут 653 с 6 направлениями",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [16186]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Трамвай 46",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Проверка названия маршрута\", function () {",
													"    pm.expect(jsonData.data.first().name).to.equal(\"46\");",
													"});",
													"",
													"/*",
													"pm.test(\"Маршрут 1001 не удален\", function () {",
													"    pm.expect(jsonData.data.first().deleted_at).to.equal(null);",
													"});",
													"",
													"pm.test(\"У маршрута 4 направления\", function () {",
													"    pm.expect(jsonData.data.first().route_trips.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Первое направление Киевский - Торговый центр\", function () {",
													"    pm.expect(jsonData.data.first().route_trips.first().name).to.equal(\"Киевский - Торговый центр\");",
													"});",
													"*/"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [16439]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Маршруты с остановками",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что больше 840\", function () {",
													"    pm.expect(jsonData.data.total).to.least(840);",
													"});",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что меньше 1200\", function () {",
													"    pm.expect(jsonData.data.total).to.below(1200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"10\"\n            },\n            [\">\", \"route_stops.id\", 0]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Маршрут 1002",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Проверка названия маршрута\", function () {",
													"    pm.expect(jsonData.data.first().name).to.equal(\"1002\");",
													"});",
													"",
													"pm.test(\"Маршрут 1002 не удален\", function () {",
													"    pm.expect(jsonData.data.first().deleted_at).to.equal(null);",
													"});",
													"",
													"pm.test(\"У маршрута 4 направления\", function () {",
													"    pm.expect(jsonData.data.first().route_trips.length).to.equal(4);",
													"});",
													"",
													"if (pm.environment.get('pos') == 'https://gorod2.mos.ru/api/issues'){",
													"pm.test(\"Первое направление Киевский - Метро «Саларьево» (суббота, воскресенье)\", function () {",
													"    pm.expect(jsonData.data.first().route_trips.first().name).to.oneOf([\"Киевский - Метро «Саларьево» (суббота, воскресенье)\"]);",
													"});",
													"}",
													"else {",
													"pm.test(\"Метро «Саларьево» - Киевский (суббота, воскресенье)\", function () {",
													"    pm.expect(jsonData.data.first().route_trips.first().name).to.oneOf([\"Киевский - Метро «Саларьево» (суббота, воскресенье)\"]);",
													"});",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//pm.environment.set(\"object_id\", 123);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [16181]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "11. Остановки",
							"item": [
								{
									"name": "Поиск остановок",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что больше 11000\", function () {",
													"    pm.expect(jsonData.data.total).to.least(11000);",
													"});",
													"",
													"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что меньше 15000\", function () {",
													"    pm.expect(jsonData.data.total).to.below(15000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"11\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 123);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка страницы на портале",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//var body = pm.response.body();",
													"",
													"//pm.test(\"Проверка названия\", function () {",
													"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
													"//});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"",
													"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password_b}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username_b}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{file_url}}",
											"host": [
												"{{file_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Остановки в ТиНАО",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Объекты найдены\", function () {",
													"    pm.expect(jsonData.data.total).to.least(900);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 11\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Остановки в Марушке",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Объекты найдены\", function () {",
													"    pm.expect(jsonData.data.total).to.least(40);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"11\"\n            },\n            {\n                \"region.id\": [122]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "27, 28, 39 Метро",
							"item": [
								{
									"name": "Поиск линии метро",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"//pm.environment.set(\"object_id\", jsonData.data.items);",
													"",
													"pm.test(\"Должно быть 15 линий метро\", function () {",
													"    pm.expect(jsonData.data.total).to.equal(15);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"27\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"asc\"\n    },\n    \"limit\": 100\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"У линии метро есть станции\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().metro_stations.length).to.least(1);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка страницы на портале",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//var body = pm.response.body();",
													"",
													"//pm.test(\"Проверка названия\", function () {",
													"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
													"//});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"",
													"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password_b}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username_b}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{file_url}}",
											"host": [
												"{{file_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск станции метро",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Объекты найдены \" + jsonData.data.total, function () {",
													"    pm.expect(jsonData.data.total).to.equal(255);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"28\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"facility.created_at\": \"asc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
													"});",
													"",
													"pm.test(\"У станции метро есть линия\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().metro_lines.length).to.least(1);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 123);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка страницы на портале",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//var body = pm.response.body();",
													"",
													"//pm.test(\"Проверка названия\", function () {",
													"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
													"//});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"",
													"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password_b}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username_b}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{file_url}}",
											"host": [
												"{{file_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск вестибюли метро",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Найдено \" + jsonData.data.total + \", а ждем 906\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.least(50);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"39\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"asc\"\n    },\n    \"limit\": 2000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
													"});",
													"",
													"pm.test(\"У вестибюля есть станция\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().metro_station.id).to.least(1);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 123);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка страницы на портале",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//var body = pm.response.body();",
													"",
													"//pm.test(\"Проверка названия\", function () {",
													"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
													"//});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"",
													"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password_b}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username_b}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{file_url}}",
											"host": [
												"{{file_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск московского кольца",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items);",
													"",
													"pm.test(\"Московского центрального кольца не должно быть\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(0)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"filter\": {\r\n        \"search\": \"Московское центральное кольцо\"\r\n    },\r\n    \"limit\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "subway/map-mp",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{pdo}}/subway/map-mp",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"subway",
												"map-mp"
											]
										}
									},
									"response": []
								},
								{
									"name": "Вестибюль коммунарка удален",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Объект не удален\", function () {",
													"    pm.expect(jsonData.data.first().deleted_at).to.equal(null);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//pm.environment.set(\"object_id\", 123);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [34804]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск вестибюля Коммунарка",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Вестибюли Коммунарка - есть\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(4);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"39\"\n            }\n        ],\n        \"search\": \"Коммунарка\"\n    },\n    \"sort\": {\n        \"id\": \"asc\"\n    },\n    \"limit\": 2000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Станция коммунарка",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Станция Коммунарка активна\", function () {",
													"    pm.expect(jsonData.data.first().deleted_at).to.equal(null);",
													"});",
													"",
													"pm.test(\"Вестибюлей у Коммунарки нет (они удалены)\", function () {",
													"    pm.expect(jsonData.data.first().metro_entrances.length).to.not.equal(null);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//pm.environment.set(\"object_id\", 123);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [88746]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "29. Вокзалы (Excel)",
							"item": [
								{
									"name": "Поиск жд вокзал",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Объекты найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(3);",
													"    pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"30\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    //pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
													"    //pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
													"    //pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
													"    //pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
													"    //pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
													"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 123);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка страницы на портале",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//var body = pm.response.body();",
													"",
													"//pm.test(\"Проверка названия\", function () {",
													"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
													"//});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"",
													"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password_b}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username_b}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{file_url}}",
											"host": [
												"{{file_url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "30. Аэропорт (Excel)",
							"item": [
								{
									"name": "Поиск аэропорт",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Объекты найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(3);",
													"    pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"29\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация по объекту",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"object_id\", jsonData.data.first().id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    //pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
													"    //pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
													"    //pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
													"    //pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
													"    //pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
													"    //pm.expect(jsonData.data.first().region.first().id).to.above(0);",
													"    //pm.expect(jsonData.data.first().district.first().id).to.above(0);",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Проверка страницы на портале",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//var body = pm.response.body();",
													"",
													"//pm.test(\"Проверка названия\", function () {",
													"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
													"//});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"",
													"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password_b}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username_b}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{file_url}}",
											"host": [
												"{{file_url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Простые, ГИС ЕХД",
							"item": [
								{
									"name": "Ярмарки",
									"item": [
										{
											"name": "Поиск ярмарки",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть 57\", function () {",
															"    pm.expect(jsonData.data.total).to.least(57);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"7\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"pm.environment.set(\"object_name\", jsonData.data.first().name);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    //pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    //pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    //pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    //pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    //pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск ярмарки ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно 0\", function () {",
															"    pm.expect(jsonData.data.total).to.equal(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 7\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Рекламные конструкции",
									"item": [
										{
											"name": "Поиск рекламные конструкции",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 12000\", function () {",
															"    pm.expect(jsonData.data.total).to.least(12000);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"9\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    //pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    //pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    //pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    //pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    //pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}  ",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск рекламы ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно 0\", function () {",
															"    pm.expect(jsonData.data.total).to.equal(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 9\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Билетные киоски",
									"item": [
										{
											"name": "Поиск билетные киоски",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"//22.11.2021 количество резко упало с 86 до 46. В ЕХД тоже 46",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 6 и меньше 100\", function () {",
															"    pm.expect(jsonData.data.total).to.least(7);",
															"    pm.expect(jsonData.data.total).to.below(100);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"14\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"asc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту без адреса",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск билетного киоска ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно 0\", function () {",
															"    pm.expect(jsonData.data.total).to.equal(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 14\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Билетный автомат",
									"item": [
										{
											"name": "Поиск билетный автомат",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 120 и меньше 180\", function () {",
															"    pm.expect(jsonData.data.total).to.least(120);",
															"    pm.expect(jsonData.data.total).to.below(180);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"40\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"asc\"\n    },\n    \"limit\": 10000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    //pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    //pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    //pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    //pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    //pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск билетного автомата ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", ТиНАО должен быть\", function () {",
															"    pm.expect(jsonData.data.total).to.above(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 40\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Парк",
									"item": [
										{
											"name": "Поиск парков",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что больше 700\", function () {",
															"    pm.expect(jsonData.data.total).to.least(700);",
															"});",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", проверка что меньше 1500\", function () {",
															"    pm.expect(jsonData.data.total).to.below(1500);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"5\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"asc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту с полигоном",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.be.oneOf([\"Polygon\", \"MultiPolygon\"]);",
															"});"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"//Мультиполигон",
															"//pm.environment.set(\"object_id\", 1256);",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск парка ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно 24\", function () {",
															"    pm.expect(jsonData.data.total).to.equal(25);",
															"});",
															"",
															"//Исключили 4 объекта которые есть и в Москве и в ТиНАО",
															"//\"not in\", \"global_id\", [1042857434, 1045309019, 4331744, 1044313025]"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 5\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск парков. Проверка district и region",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items.first());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function get_random(arr) {\r",
															"    var item = arr[Math.floor(Math.random() * arr.length)];\r",
															"    return item;\r",
															"}\r",
															"var parks = get_random(['Парк Казачьей Славы', 'Народный парк в Крылатском', 'Территория прилегающая к кинотеатру МИНСК']);\r",
															"pm.environment.set(\"random_park\", parks);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n               \"category.id\": 5\n            }\n        ],\n        \"search\":\"{{random_park}}\"\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту с полигоном. Проверка district и region",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"var region_size = Object.keys(jsonData.data.first().region).length;",
															"var district_size = Object.keys(jsonData.data.first().region).length;",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"region, district. Проверка количества и названий\", function () {",
															"    pm.expect(jsonData.data.first().region.first().name.toLowerCase()).to.be.oneOf([\"можайский\", \"крылатское\", \"лефортово\"]);",
															"    pm.expect(jsonData.data.first().district.first().name.toLowerCase()).to.be.oneOf([\"западный округ\", \"юго-восточный округ\"]);",
															"    pm.expect(region_size).to.below(2);",
															"    pm.expect(district_size).to.below(2);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//Мультиполигон",
															"//pm.environment.set(\"object_id\", 1256);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "НТО",
									"item": [
										{
											"name": "Поиск НТО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 4100\", function () {",
															"    pm.expect(jsonData.data.total).to.least(4100);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"6\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"asc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    //pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    //pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    //pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    //pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    //pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [59206]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск НТО ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно 0\", function () {",
															"    pm.expect(jsonData.data.total).to.equal(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 6\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Улицы",
									"item": [
										{
											"name": "Поиск улиц",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть 0\", function () {",
															"    pm.expect(jsonData.data.total).to.equal(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"35\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Летнее кафе",
									"item": [
										{
											"name": "Поиск летних кафе",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 3100\", function () {",
															"    pm.expect(jsonData.data.total).to.least(3100);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"8\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    //pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    //pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    //pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    //pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    //pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\r\n\t\"ids\": [64360]\r\n}  ",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск летних кафе ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 25\", function () {",
															"    pm.expect(jsonData.data.total).to.least(25);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 8\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Паркоматы",
									"item": [
										{
											"name": "Поиск паркоматов",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 140\", function () {",
															"    pm.expect(jsonData.data.total).to.least(140);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"15\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту без адреса",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Объекты аренды",
									"item": [
										{
											"name": "Поиск объектов арендного пользования",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 2500\", function () {",
															"    pm.expect(jsonData.data.total).to.least(2500);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"19\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ЗАГС",
									"item": [
										{
											"name": "Поиск ЗАГСов",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть 40\", function () {",
															"    pm.expect(jsonData.data.total).to.least(40);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"21\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ветеринарные учреждения",
									"item": [
										{
											"name": "Поиск ветеринарных учреждений",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 23\", function () {",
															"    pm.expect(jsonData.data.total).to.least(23);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"32\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "МФЦ",
									"item": [
										{
											"name": "Поиск МФЦ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 132\", function () {",
															"    pm.expect(jsonData.data.total).to.least(132);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"36\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});",
															"",
															"pm.test(\"В МЦФ найдено \" + jsonData.data.first().deps_services.length + \" услуг\", function () {",
															"    var jsonData = pm.response.json();    ",
															"    //Услаги в МФЦ",
															"    pm.expect(jsonData.data.first().deps_services.length).to.above(0);   ",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Коммерческая стройка",
									"item": [
										{
											"name": "Поиск коммерческой стройки",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 600\", function () {",
															"    pm.expect(jsonData.data.total).to.least(600);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"12\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту без адреса",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Жилая стройка",
									"item": [
										{
											"name": "Поиск жилой стройки",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше или равно 433\", function () {",
															"    pm.expect(jsonData.data.total).to.least(430);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"16\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту без адреса",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Бюджетная стройка",
									"item": [
										{
											"name": "Поиск бюджетной стройки",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 110\", function () {",
															"    pm.expect(jsonData.data.total).to.least(110);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"17\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту без адреса",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Туалеты",
									"item": [
										{
											"name": "Поиск туапетов",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 260\", function () {",
															"    pm.expect(jsonData.data.total).to.least(260);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"18\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту без адреса",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.equal(\"Point\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var body = pm.response.body();",
															"",
															"//pm.test(\"Проверка названия\", function () {",
															"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Трехуровневые, ГИС ЕХД",
							"item": [
								{
									"name": "Поликлиники",
									"item": [
										{
											"name": "Многоадресные",
											"item": [
												{
													"name": "Поиск поликлиники с несколькими адресами",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = pm.response.json();",
																	"pm.environment.set(\"object_id\", jsonData.data.items.first());",
																	"",
																	"pm.test(\"Должно быть 10 объектов, найдено: \" + jsonData.data.total, function () {",
																	"    var jsonData = pm.response.json();",
																	"    pm.expect(jsonData.data.total).to.equal(10);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "system-name",
																"value": "developer",
																"type": "text"
															},
															{
																"key": "system-password",
																"value": "demo",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"filter\": {\r\n        \"search\": \"Государственное бюджетное учреждение здравоохранения города Москвы «Детская стоматологическая поликлиника № 44 Департамента здравоохранения города Москвы»\"\r\n    },\r\n    \"limit\": 10\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/find",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"find"
															]
														}
													},
													"response": []
												},
												{
													"name": "Информация по объекту",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.environment.set(\"object_id\", jsonData.data.first().id);",
																	"",
																	"pm.test(\"Информация по объекту корректная\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
																	"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
																	"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
																	"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
																	"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
																	"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
																	"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
																	"});"
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"type": "text",
																"value": "developer"
															},
															{
																"key": "system-password",
																"type": "text",
																"value": "demo"
															},
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/get",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"get"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Время работы",
											"item": [
												{
													"name": "Поиск нужной поликлиники",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = pm.response.json();",
																	"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"type": "text",
																"value": "developer"
															},
															{
																"key": "system-password",
																"type": "text",
																"value": "demo"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 4\n            ],\n            [\n                \"=\",\n                \"address.unom\", 4402559\n            ]\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 1119,\n                \"rule\": [\"=\", \"value\", \"Стоматологическая поликлиника взрослая\"]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/find",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"find"
															]
														}
													},
													"response": []
												},
												{
													"name": "Информация по объекту",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.environment.set(\"object_id\", jsonData.data.first().id);",
																	"",
																	"pm.test(\"Информация по объекту корректная\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
																	"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
																	"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
																	"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
																	"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
																	"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
																	"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
																	"});",
																	"",
																	"pm.test(\"Проверяем название: \" + jsonData.data.first().name, function () {",
																	"    pm.expect(jsonData.data.first().name).to.equal(\"Государственное бюджетное учреждение здравоохранения города Москвы «Троицкая городская больница Департамента здравоохранения города Москвы». Амбулатория «Первомайское»\");",
																	"});",
																	"",
																	"var a = jsonData.data.first().facilityAttributeSet;",
																	"",
																	"for (var i = 0; i < a.length; i++) ",
																	"{",
																	"    if (a[i].code == 'WorkingHours')",
																	"    {  ",
																	"        var w = jsonData.data.first().facilityAttributeSet[i].value;",
																	"",
																	"        for (var ii = 0; ii < w.length; ii++) ",
																	"        {",
																	"            if (w[ii].DayOfWeek.value == \"вторник\")",
																	"            {  ",
																	"                pm.environment.set(\"clinic_visit_time\", w[ii].Hours);",
																	"            }",
																	"        }",
																	"    }",
																	"}",
																	"",
																	"//todo",
																	"//console.log(Date().previous().monday());",
																	"",
																	"var moment = require('moment')",
																	"console.log(moment().day(\"Tuesday\"));",
																	"",
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"type": "text",
																"value": "developer"
															},
															{
																"key": "system-password",
																"type": "text",
																"value": "demo"
															},
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/get",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"get"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Поликлиники",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 550\", function () {",
															"    pm.expect(jsonData.data.total).to.least(550);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"4\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Детские поликлиники",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 180\", function () {",
															"    pm.expect(jsonData.data.total).to.above(180);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"4\"\n            }\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 870,\n                \"rule\": [\"=\", \"value\", 19188]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поликлиники ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 50\", function () {",
															"    pm.expect(jsonData.data.total).to.least(50);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 4\n            ],\n            [\n                \"in\",\n                \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Взрослые поликлиники",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 225\", function () {",
															"    pm.expect(jsonData.data.total).to.above(225);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"4\"\n            }\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 870,\n                \"rule\": [\"=\", \"value\", 19187]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Стоматологические",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 90\", function () {",
															"    pm.expect(jsonData.data.total).to.above(90);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"4\"\n            }\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 870,\n                \"rule\": [\"in\", \"value\", [19194, 19195] ]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "С аптекой",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 200\", function () {",
															"    pm.expect(jsonData.data.total).to.above(200);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"4\"\n            }\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 882,\n                \"rule\": [\"!=\", \"value\", \"нет\"]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Ответственные",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"//pm.test(\"Найдены объекты из owner_id \" + jsonData.data.total + \"\", function () {",
															"//    pm.expect(jsonData.data.total).to.equal(0);",
															"//});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"4\"\n            }\n        ],\n         \"attribute\": [\n            {\n                \"attribute_id\": 1125,\n                \"rule\": [\">\", \"value\", 0]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Здравоохранения",
									"item": [
										{
											"name": "Учреждения здравоохранения",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 675\", function () {",
															"    pm.expect(jsonData.data.total).to.least(675);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"26\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Труда и соц.защиты",
									"item": [
										{
											"name": "Учреждения труда и соц.защиты",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 390\", function () {",
															"    pm.expect(jsonData.data.total).to.least(390);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"22\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"});"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"//pm.environment.set(\"object_id\", 123);",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Учреждения труда в ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 0\", function () {",
															"    pm.expect(jsonData.data.total).to.above(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 22\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Спорт",
									"item": [
										{
											"name": "Учреждения спорта",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 174\", function () {",
															"    pm.expect(jsonData.data.total).to.least(174);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"23\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"});"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"//pm.environment.set(\"object_id\", 123);",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Учреждения спорта в ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть > 0\", function () {",
															"    pm.expect(jsonData.data.total).to.above(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 23\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Культуры",
									"item": [
										{
											"name": "Учреждения культуры",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 663\", function () {",
															"    pm.expect(jsonData.data.total).to.least(663);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"24\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"});"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"//pm.environment.set(\"object_id\", 123);",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Учреждения культуры в ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 0\", function () {",
															"    pm.expect(jsonData.data.total).to.above(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 24\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Поиск по УНОМу",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 0\", function () {",
															"    pm.expect(jsonData.data.total).to.above(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 24\n            ],\n            [\n                \"=\", \"address.unom\", 2120994\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка названия объекта",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Проверяем название: \" + jsonData.data.first().name, function () {",
															"    pm.expect(jsonData.data.first().name).to.equal(\"Государственное бюджетное учреждение культуры города Москвы «Государственный музей А. С. Пушкина» улица Пречистенка, дом 12/2, строение 5\");",
															"});",
															"",
															"var a = jsonData.data.first().facilityAttributeSet;",
															"",
															"for (var i = 0; i < a.length; i++) ",
															"{",
															"    if (a[i].code == 'name_for_page')",
															"    {  ",
															"        pm.test(\"Название для страницы: \" + a[i].value, function () {",
															"            pm.expect(a[i].value).to.equal(\"Государственное бюджетное учреждение культуры города Москвы «Государственный музей А. С. Пушкина»\");",
															"        });",
															"    }",
															"",
															"    if (a[i].code == 'name_for_search')",
															"    {  ",
															"        pm.test(\"Название для поиска: \" + a[i].value, function () {",
															"            pm.expect(a[i].value).to.equal(\"Государственное бюджетное учреждение культуры города Москвы «Государственный музей А. С. Пушкина» улица Пречистенка, дом 12/2, строение 5\");",
															"        });",
															"    }",
															"",
															"    if (a[i].code == 'name_for_form')",
															"    {  ",
															"        pm.test(\"Название для формы сообщить: \" + a[i].value, function () {",
															"            pm.expect(a[i].value).to.equal(\"ГБУК «ГМП» улица Пречистенка, дом 12/2, строение 5\");",
															"        });",
															"    }",
															"",
															"    if (a[i].code == 'name_for_message')",
															"    {  ",
															"        pm.test(\"Название для сообщения: \" + a[i].value, function () {",
															"            pm.expect(a[i].value).to.equal(\"ГБУК «ГМП» улица Пречистенка, дом 12/2, строение 5\");",
															"        });",
															"    }",
															"",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}],\r\n    \"scope\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Образования",
									"item": [
										{
											"name": "Учреждения образования",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 4620\", function () {",
															"    pm.expect(jsonData.data.total).to.least(4620);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"25\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
															"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "Проверка страницы на портале",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/objects/\" + pm.environment.get(\"object_id\") + \"/about\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password_b}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username_b}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "debug-enabled",
														"value": "1",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{file_url}}",
													"host": [
														"{{file_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Учреждения образования в ТиНАО",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Объектов \" + jsonData.data.total + \", а должно быть больше 0\", function () {",
															"    pm.expect(jsonData.data.total).to.above(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 25\n            ],\n            [\n                \"in\", \"district.id\", [11, 12]\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "ТИНАО",
							"item": [
								{
									"name": "Поиск объектов по коду категории",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items.first());",
													"",
													"//pm.test(\"Объект найден\", function () {",
													"//    var jsonData = pm.response.json();",
													"//    pm.expect(jsonData.data.items.first()).to.eql(200);",
													"//});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.code\": \"public_transport\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об объекте",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 106858);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Точка в ТиНАО",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Точка в ТиНАО\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.is_in_polygon).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"long\": 37.325722,\r\n    \"lat\": 55.490289,\r\n    \"district_id\": [11,12]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/is-in-polygon",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"is-in-polygon"
											]
										}
									},
									"response": []
								},
								{
									"name": "Точка не в ТиНАО",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Точка не в ТиНАО\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.is_in_polygon).to.equal(false);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"long\": 37.193635,\r\n    \"lat\": 55.603687,\r\n    \"district_id\": [11,12]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/is-in-polygon",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"is-in-polygon"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Проверка доступности",
							"item": [
								{
									"name": "Дом, любая тема",
									"item": [
										{
											"name": "1. Поиск дома в Москве, не спецфонд",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 2\n            ],\n            [\n                \"in\",\n                \"district.id\", [11, 12]\n            ]\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 769,\n                \"rule\": [\"!=\", \"value\", \"спецфонд\"]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Поиск тем по домам",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"theme_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Доступно тем\", function () {",
															"    pm.expect(jsonData.data.items.length).to.least(6);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"theme.status_code\": \"published\"\n            },\n            {\n                \"categories.category_id\": 2\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pos}}/theme/find",
													"host": [
														"{{pos}}"
													],
													"path": [
														"theme",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Информация по теме, берем кондишин",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"theme_name\", jsonData.data.first().title);",
															"pm.environment.set(\"theme_condition\", JSON.stringify(jsonData.data.first().condition));",
															""
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"//pm.environment.set(\"theme_id\", 1108);",
															"",
															"//Птички",
															"//pm.environment.set(\"theme_id\", 579);",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"ids\": [\r\n        {{theme_id}}\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pos}}/theme/get",
													"host": [
														"{{pos}}"
													],
													"path": [
														"theme",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "4. facility/check-accessibility проверка доступности Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Тема доступна\", function () {",
															"    pm.expect(jsonData.data.first().is_accessible).to.equal(true);",
															"});"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"//pm.environment.set(\"object_id\", 123);",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"conditions\": [\n        {\n            \"theme_id\": {{theme_id}},\n            \"object_id\": {{object_id}},\n            \"condition\": {{theme_condition}}\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/check-accessibility",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"check-accessibility"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Дом, не спецфонд, тема 1037",
									"item": [
										{
											"name": "1. Поиск обычного дома в Москве",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items.first());"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 2\n            ],\n            [\n                \"in\",\n                \"district.id\", [11, 12]\n            ]\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 769,\n                \"rule\": [\"!=\", \"value\", \"спецфонд\"]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "2. facility/check-accessibility проверка доступности",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Тема доступна\", function () {",
															"    pm.expect(jsonData.data.first().is_accessible).to.equal(true);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"conditions\": [\n        {\n            \"theme_id\": 1037,\n            \"object_id\": {{object_id}},\n            \"condition\": {\"attribute\": [{\"filter\": {\"attribute\": [{\"rule\": [\"=\", \"value\", \"спецфонд\"], \"attribute_id\": 769}]}, \"reason\": \"Данный многоквартирный дом относится к специализированному фонду\", \"category_id\": 2}]} \n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/check-accessibility",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"check-accessibility"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Дом, спецфонд, тема 1037",
									"item": [
										{
											"name": "1. Поиск дома со спецфондом",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 2\n            ],\n            [\n                \"not in\", \"district.id\", [11, 12]\n            ]\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 769, \"rule\": [\"=\", \"value\", \"спецфонд\"]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "2. facility/check-accessibility проверка доступности",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Тема недоступна\", function () {",
															"    pm.expect(jsonData.data.first().is_accessible).to.equal(false);",
															"});"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"//pm.environment.set(\"object_id\", 123);",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"conditions\": [\n        {\n            \"theme_id\": 1037,\n            \"object_id\": {{object_id}},\n            \"condition\": {\"attribute\": [{\"filter\": {\"attribute\": [{\"rule\": [\"=\", \"value\", \"спецфонд\"], \"attribute_id\": 769}]}, \"reason\": \"Данный многоквартирный дом относится к специализированному фонду\", \"category_id\": 2}]} \n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/check-accessibility",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"check-accessibility"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Поликлиники",
									"item": [
										{
											"name": "Поликлиника детская, тема 1130",
											"item": [
												{
													"name": "1. Поиск детской поликлиники",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"var jsonData = pm.response.json();",
																	"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);"
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"type": "text",
																"value": "developer"
															},
															{
																"key": "system-password",
																"type": "text",
																"value": "demo"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"4\"\n            }\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 870,\n                \"rule\": [\"=\", \"value\", 19188]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/find",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"find"
															]
														}
													},
													"response": []
												},
												{
													"name": "1. Поиск детской поликлиники по имени",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"var jsonData = pm.response.json();",
																	"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);"
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"type": "text",
																"value": "developer"
															},
															{
																"key": "system-password",
																"type": "text",
																"value": "demo"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"category.id\", 4\n            ],\n            [\n                \"like\", \"facility.name\", \"детская\"\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/find",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"find"
															]
														}
													},
													"response": []
												},
												{
													"name": "2. facility/check-accessibility проверка доступности",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.test(\"Тема доступна\", function () {",
																	"    pm.expect(jsonData.data.first().is_accessible).to.equal(true);",
																	"});"
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"value": "developer",
																"type": "text"
															},
															{
																"key": "system-password",
																"value": "demo",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"conditions\": [\n        {\n            \"theme_id\": 1130,\n            \"object_id\": {{object_id}},\n            \"condition\": \n            \n{\n  \"attribute\": [\n    {\n      \"filter\": {\n        \"attribute\": [\n          {\n            \"rule\": [\n              \"in\",\n              \"value\",\n              [\n                19194,\n                19195,\n                19187\n              ]\n            ],\n            \"attribute_id\": 870\n          }\n        ]\n      },\n      \"reason\": \"Тема недоступна для взрослых и стоматологических поликлиник \",\n      \"category_id\": 4\n    }\n  ]\n}\n\n        }\n    ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/check-accessibility",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"check-accessibility"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Поликлиника с аптекой, тема 1101",
											"item": [
												{
													"name": "1. Поиск поликлиники с аптекой",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"var jsonData = pm.response.json();",
																	"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);"
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"type": "text",
																"value": "developer"
															},
															{
																"key": "system-password",
																"type": "text",
																"value": "demo"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"4\"\n            }\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 882,\n                \"rule\": [\"!=\", \"value\", \"нет\"]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/find",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"find"
															]
														}
													},
													"response": []
												},
												{
													"name": "2. Информация по объекту",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.environment.set(\"object_id\", jsonData.data.first().id);",
																	"",
																	"pm.test(\"Информация по объекту корректная\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
																	"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
																	"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
																	"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
																	"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
																	"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
																	"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
																	"});"
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"//pm.environment.set(\"object_id\", 123);",
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"type": "text",
																"value": "developer"
															},
															{
																"key": "system-password",
																"type": "text",
																"value": "demo"
															},
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/get",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"get"
															]
														}
													},
													"response": []
												},
												{
													"name": "3. facility/check-accessibility проверка доступности",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.test(\"Тема 1213 недоступна\", function () {",
																	"    pm.expect(jsonData.data.first().is_accessible).to.equal(true);",
																	"});"
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"value": "developer",
																"type": "text"
															},
															{
																"key": "system-password",
																"value": "demo",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"conditions\": [\n        {\n            \"theme_id\": 1101,\n            \"object_id\": {{object_id}},\n            \"condition\": \n            \n{\n  \"attribute\": [\n    {\n      \"filter\": {\n        \"attribute\": [\n          {\n            \"rule\": [\n              \"=\",\n              \"value\",\n              \"нет\"\n            ],\n            \"attribute_id\": 882\n          }\n        ]\n      },\n      \"reason\": \"Тема доступна только для поликлиник, в которых имеются аптечные пункты\",\n      \"category_id\": 4\n    }\n  ]\n}\n        }\n    ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/check-accessibility",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"check-accessibility"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Поликлиника без аптеки, тема 1101",
											"item": [
												{
													"name": "1. Поиск поликлиники без аптеки",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"var jsonData = pm.response.json();",
																	"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);"
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"type": "text",
																"value": "developer"
															},
															{
																"key": "system-password",
																"type": "text",
																"value": "demo"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"4\"\n            }\n        ],\n        \"attribute\": [\n            {\n                \"attribute_id\": 882,\n                \"rule\": [\"=\", \"value\", \"нет\"]\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/find",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"find"
															]
														}
													},
													"response": []
												},
												{
													"name": "2. Информация по объекту",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.environment.set(\"object_id\", jsonData.data.first().id);",
																	"",
																	"pm.test(\"Информация по объекту корректная\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    pm.expect(jsonData.data.first().address.first().region.id).to.above(0);",
																	"    pm.expect(jsonData.data.first().address.first().region.district.id).to.above(0);",
																	"    pm.expect(jsonData.data.first().address.first().geo_point.type).to.equal(\"Point\");",
																	"    pm.expect(jsonData.data.first().address.first().geo_polygon.type).to.equal(\"Point\");",
																	"    pm.expect(jsonData.data.first().address.first().unom).to.above(0);",
																	"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
																	"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
																	"});"
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"//pm.environment.set(\"object_id\", 123);",
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"type": "text",
																"value": "developer"
															},
															{
																"key": "system-password",
																"type": "text",
																"value": "demo"
															},
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/get",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"get"
															]
														}
													},
													"response": []
												},
												{
													"name": "3. facility/check-accessibility проверка доступности",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.test(\"Тема 1213 недоступна\", function () {",
																	"    pm.expect(jsonData.data.first().is_accessible).to.equal(false);",
																	"    pm.expect(jsonData.data.first().inaccessible_message).to.equal(\"Тема доступна только для поликлиник, в которых имеются аптечные пункты\");",
																	"});"
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"//pm.environment.set(\"object_id\", 123);",
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "system-name",
																"value": "developer",
																"type": "text"
															},
															{
																"key": "system-password",
																"value": "demo",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"conditions\": [\n        {\n            \"theme_id\": 1101,\n            \"object_id\": {{object_id}},\n            \"condition\": \n            \n{\n  \"attribute\": [\n    {\n      \"filter\": {\n        \"attribute\": [\n          {\n            \"rule\": [\n              \"=\",\n              \"value\",\n              \"нет\"\n            ],\n            \"attribute_id\": 882\n          }\n        ]\n      },\n      \"reason\": \"Тема доступна только для поликлиник, в которых имеются аптечные пункты\",\n      \"category_id\": 4\n    }\n  ]\n}\n\n        }\n    ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pdo}}/facility/check-accessibility",
															"host": [
																"{{pdo}}"
															],
															"path": [
																"facility",
																"check-accessibility"
															]
														}
													},
													"response": []
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Поиск по тексту",
							"item": [
								{
									"name": "Поиск по фразе \"соломенной 10\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items);",
													"",
													"pm.test(\"Объекты найдены\", function () {",
													"    pm.expect(jsonData.data.total).to.equal(4);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"filter\": {\r\n        \"search\": \"соломённой 10\"\r\n    },\r\n    \"limit\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об объектах",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data[0].name).to.oneOf([\"проезд Соломенной Сторожки, дом 10\"]) ",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//pm.environment.set(\"object_id\", 548799);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск дома по фразе \"соломенной 10\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items);",
													"",
													"pm.test(\"Объекты найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(2);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            {\r\n                \"category.id\": 2\r\n            }\r\n        ],\r\n        \"search\": \"соломённой 10\"\r\n    },\r\n    \"limit\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об объектах",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().name).to.equal(\"проезд Соломенной Сторожки, дом 10\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//pm.environment.set(\"object_id\", 548799);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [1065932]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"ангелов переулок 6\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items);",
													"",
													"pm.test(\"Объекты найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.least(6);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"filter\": {\r\n        \"search\": \"ангелов переулок 6\"\r\n    },\r\n    \"limit\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об объектах",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    //Ангелов переулок, дом 6",
													"    pm.expect(jsonData.data.first().address.first().unom).to.equal(32109);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 548799);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск метро \"ленин\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items);",
													"",
													"pm.test(\"Объекты найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.equal(2);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"filter\": {\r\n        \"condition\":[\r\n            \"and\",\r\n            {\"category.code\": [\"subway_line\", \"subway_station\"]}\r\n        ],\r\n        \"search\": \"ленина\"\r\n    },\r\n    \"offset\": 0,\r\n    \"limit\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об объектах",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().name).to.equal(\"Библиотека имени Ленина\");",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 548799);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"аэропорт\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items);",
													"",
													"pm.test(\"Найдено \" + jsonData.data.total + \", д.б. не меньше 50\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.least(50);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"filter\": {\r\n        \"search\": \"аэропорт\"\r\n    },\r\n    \"limit\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об объектах",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().name.substring(0,8)).to.equal(\"Аэропорт\");",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 548799);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"Аэропорт «Домодедово»\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items);",
													"",
													"pm.test(\"Найдено \" + jsonData.data.total + \"\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.above(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"filter\": {\r\n        \"search\": \"Аэропорт «Домодедово»\"\r\n    },\r\n    \"limit\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об объектах",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + (jsonData.data.first().name), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().name).to.equal(\"Аэропорт «Домодедово»\");",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 548799);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск \"молостовых дом 2 корпус 1\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"object_id\", jsonData.data.items);",
													"",
													"pm.test(\"Найдено \" + jsonData.data.total + \", д.б. больше 0\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.above(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"filter\": {\r\n        \"search\": \"молостовых дом 2 корпус 1\"\r\n    },\r\n    \"limit\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об объектах",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Первый в списке: \" + jsonData.data.first().name + \", а должен быть улица Молостовых ул., д.2, к.1\", function () {",
													"    var jsonData = pm.response.json();",
													"    //случай не тривиальный, допускаем что правильный адрес может быть на втором месте",
													"    pm.expect(jsonData.data.first().name).to.oneOf([\"Молостовых ул., д.2, к.1\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//pm.environment.set(\"object_id\", 548799);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Поиск ближайших",
							"item": [
								{
									"name": "Мобилка",
									"item": [
										{
											"name": "Поиск ближайших",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Найдено 2 объекта\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.length).to.least(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"lat\": 55.693970407733,\n    \"long\": 37.664170911802,\n    \"radius\": 100,\n    \"limit\": 100,\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"facility.visible_portal\": 1,\n                \"facility.deleted_at\": null\n            }\n        ]\n    },\n    \"sort\": {\n        \"facility.name\": \"asc\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/nearest",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"nearest"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Поиск ближайших объектов",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"if (jsonData.data.first()) pm.environment.set(\"object_id\", jsonData.data.first().id);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Долгота",
													"pm.environment.set(\"longitude\", 37.0+_.random(5000,6000)/10000);",
													"",
													"//Широта",
													"pm.environment.set(\"latitude\", 55.0+_.random(7000,8000)/10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"long\": {{longitude}},\n    \"lat\": {{latitude}},\n    \"radius\": 500,\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/nearest",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"nearest"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Проверка удаленных",
							"item": [
								{
									"name": "Поиск активных объектов",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"objects_total\", jsonData.data.total);",
													"",
													"pm.test(\"Должно быть больше 120 тысяч, а сейчас \" + jsonData.data.total, function () ",
													"{",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.least(120000);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"facility.visible_portal\": 1\n            },\n            {\n                \"facility.deleted_at\": null\n            }\n        ]\n    },\n    \"offset\": 0,\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск всех объектов",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"pm.test(\"Количество объектов совпало\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.eql(pm.environment.get(\"objects_total\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n        ]\n    },\n    \"offset\": 0,\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Работы",
							"item": [
								{
									"name": "ДКР из 1.0",
									"item": [
										{
											"name": "Поиск дома по УНОМу",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items.first());",
															"",
															"pm.test(\"Найден 1 объект\", function () {",
															"    pm.expect(jsonData.data.total).to.equal(1);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"2\"\n            },\n            {\n                \"address.unom\": \"13333\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "Информация по объекту Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"    ",
															"pm.environment.set(\"object_id\", jsonData.data.first().id);",
															"",
															"pm.test(\"Информация по объекту корректная\", function () {",
															"    pm.expect(jsonData.data.first().region.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().district.first().id).to.above(0);",
															"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
															"    pm.expect(jsonData.data.first().geo_polygon.type).to.be.oneOf([\"Point\"]);",
															"});",
															" pm.test(\"Проверка наименований статусов работ ДКР и МКР\", function (){",
															"    pm.expect(jsonData.data[0].works_dkr[0].work_status.toLowerCase()).to.be.oneOf([\"завершено\", \"запланировано\", \"в процессе\"]);",
															"    pm.expect(jsonData.data[0].works_dkr[1].work_status.toLowerCase()).to.be.oneOf([\"завершено\", \"запланировано\", \"в процессе\"]);",
															"    pm.expect(jsonData.data[0].works_dkr[2].work_status.toLowerCase()).to.be.oneOf([\"завершено\", \"запланировано\", \"в процессе\"]);",
															"    pm.expect(jsonData.data[0].works_dkr[3].work_status.toLowerCase()).to.be.oneOf([\"завершено\", \"запланировано\", \"в процессе\"]);",
															" });"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//Мультиполигон",
															"//pm.environment.set(\"object_id\", 1256);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Поиск всех объектов (object_id)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
											"",
											"pm.test(\"Должно быть больше 126 тысяч, а сейчас \" + jsonData.data.total, function () ",
											"{    ",
											"    pm.expect(jsonData.data.total).to.least(120000);",
											"});",
											"",
											"pm.test(\"Должно быть меньше 141 тысяч, а сейчас \" + jsonData.data.total, function () ",
											"{    ",
											"    pm.expect(jsonData.data.total).to.below(141000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 100\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/facility/find",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"facility",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "Поиск объектов  по Id категории",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
											"",
											"//pm.test(\"Объект найден\", function () {",
											"//    var jsonData = pm.response.json();",
											"//    pm.expect(jsonData.data.items.first()).to.eql(200);",
											"//});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": \"2\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/facility/find",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"facility",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "Поиск объектов по коду категории",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
											"",
											"//pm.test(\"Объект найден\", function () {",
											"//    var jsonData = pm.response.json();",
											"//    pm.expect(jsonData.data.items.first()).to.eql(200);",
											"//});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.code\": \"public_transport\"\n            }\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/facility/find",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"facility",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "Информация об объекте",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//pm.environment.set(\"object_id\", 548799);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/facility/get",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"facility",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Информация об объекте без части данных",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//pm.environment.set(\"object_id\", 548799);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\": [\r\n        {{object_id}}\r\n    ],\r\n    \"hide\": [\r\n        \"address.geo_point\",\r\n        \"address.geo_polygon\",\r\n        \"geo_point\",\r\n        \"geo_polygon\",        \r\n        \"facilityAttributeSet\",\r\n        \"facility_rules\"\r\n    ],\r\n    \"scope\": \"admin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/facility/get",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"facility",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Информация о не скольких объектах",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//pm.environment.set(\"object_id\", 548799);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"ids\": [{{items}}]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/facility/get",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"facility",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Информация по всем атрибутам объекта",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//pm.environment.set(\"object_id\", 123);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"ids\": [{{object_id}}],\r\n    \"scope\": \"admin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/facility/get",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"facility",
										"get"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Округа и районы",
					"item": [
						{
							"name": "Округа",
							"item": [
								{
									"name": "Список округов",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"",
													"pm.test(\"Найдено 12 округов\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.length).to.equal(12);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"sort\": {\r\n        \"district.id\": \"asc\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/district/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"district",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение всех округов",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Найдено 12 округов\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.length).to.equal(12);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n        1,\r\n        2,\r\n        3,\r\n        4,\r\n        5,\r\n        6,\r\n        7,\r\n        8,\r\n        9,\r\n        10,\r\n        11,\r\n        12\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/district/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"district",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск округов",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"",
													"pm.test(\"Найден 1 округ\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.length).to.equal(1);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"sort\": {\r\n        \"district.name\": \"asc\"\r\n    },\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            {\r\n                \"district.name\": \"Южный округ\"\r\n            }\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/district/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"district",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение ТиНАО",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Найдено 2 округ\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.length).to.equal(2);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\":[11,12]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/district/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"district",
												"get"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Районы",
							"item": [
								{
									"name": "Список районов",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"",
													"pm.test(\"Найдено 146 районов\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.length).to.equal(146);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"sort\": {\"district.name\": \"asc\"}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/region/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"region",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Список районов ТиНАО и ЗелАО",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Найдено 26 районов\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.length).to.equal(26);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            [\r\n                \"in\", \"district.id\", [10,11,12]\r\n            ]\r\n        ]\r\n    },\r\n    \"sort\": {\"id\": \"asc\"}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/region/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"region",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск районов",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"",
													"pm.test(\"Найдено 1 район\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.length).to.equal(1);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 123);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"sort\": {\r\n        \"region.name\": \"asc\"\r\n    },\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            {\r\n                \"region.name\": \"Южное Бутово\"\r\n            }\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/region/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"region",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение района",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\":[6]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/region/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"region",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение района ТиНАО и ЗелАО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\":[26,\r\n            94,\r\n            102,\r\n            103,\r\n            115,\r\n            119,\r\n            120,\r\n            122,\r\n            131,\r\n            132,\r\n            133,\r\n            134,\r\n            135,\r\n            136,\r\n            137,\r\n            138,\r\n            139,\r\n            140,\r\n            141,\r\n            142,\r\n            143,\r\n            144,\r\n            145,\r\n            146,\r\n            147,\r\n            148]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/region/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"region",
												"get"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получить район",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"pm.test(\"Проверка названия района\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.first().name).to.equal(\"Вешняки\");",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\":[127]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/region/get",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"region",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "region/what-region точка в Москве",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"pm.test(\"Проверка точки в Москве\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.in_moscow).to.equal(true);",
											"    pm.expect(jsonData.data.region_id).to.equal(30);",
											"    pm.expect(jsonData.data.district_id).to.equal(2);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"long\": 37.562946708,\r\n    \"lat\": 55.809730974\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/region/what-region",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"region",
										"what-region"
									]
								}
							},
							"response": []
						},
						{
							"name": "region/what-region внуково 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Проверка точки в Москве\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.in_moscow).to.equal(false);",
											"    pm.expect(jsonData.data.region_id).to.equal(null);",
											"    pm.expect(jsonData.data.district_id).to.equal(null);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"long\": 37.145632053,\r\n    \"lat\": 56.966069958\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/region/what-region",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"region",
										"what-region"
									]
								}
							},
							"response": []
						},
						{
							"name": "region/what-region внуково 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"pm.test(\"Проверка точки в Москве\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.in_moscow).to.equal(true);",
											"    pm.expect(jsonData.data.region_id).to.equal(40);",
											"    pm.expect(jsonData.data.district_id).to.equal(8);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"long\": 37.299249,\r\n    \"lat\": 55.609261\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/region/what-region",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"region",
										"what-region"
									]
								}
							},
							"response": []
						},
						{
							"name": "region/what-region точка не в Москве",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"pm.test(\"Проверка точки в Москве\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.in_moscow).to.equal(true);",
											"    pm.expect(jsonData.data.region_id).to.equal(40);",
											"    pm.expect(jsonData.data.district_id).to.equal(8);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"long\": 37.254961745,\r\n    \"lat\": 55.615617958\r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/region/what-region",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"region",
										"what-region"
									]
								}
							},
							"response": []
						},
						{
							"name": "district/all-with-regions все округа и районы Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"sort\": {\r\n        \"district.name\": \"asc\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/district/all-with-regions",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"district",
										"all-with-regions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Словари",
					"item": [
						{
							"name": "Список словарей",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
											"",
											"pm.test(\"Словари найдены\", function () {",
											"    pm.expect(jsonData.data.items.length).to.above(90);",
											"    pm.expect(jsonData.data.items.length).to.below(150);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"sort\": {\r\n        \"name\": \"asc\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/dictionary/find",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"dictionary",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "Список всех значений словаря 870 поликлиник",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Атрибутов \" + jsonData.data.length + \", а должно быть 26\", function () {",
											"    pm.expect(jsonData.data.length).to.equal(4);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"category_id\": 4,\r\n    \"attribute_id\": 870\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/facility/get-values-by-attribute",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"facility",
										"get-values-by-attribute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Список всех значений словаря 938 здрава",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Атрибутов \" + jsonData.data.length + \", а должно быть 24\", function () {",
											"    pm.expect(jsonData.data.length).to.equal(24);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"category_id\": 26,\r\n    \"attribute_id\": 938\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/facility/get-values-by-attribute",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"facility",
										"get-values-by-attribute"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Статистика",
					"item": [
						{
							"name": "statistics/objects-by-region",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"В статистике дворов: \" + jsonData.data.by_category[0].facility_count + \", а должно быть \" + pm.environment.get(\"yard_total\"), function () {",
											"    pm.expect(jsonData.data.by_category[0].facility_count).to.equal(pm.environment.get(\"yard_total\"));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"count_in\": \"overall\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/statistics/objects-by-region",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"statistics",
										"objects-by-region"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ФЛС",
					"item": [
						{
							"name": "fls/find",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/fls/find",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"fls",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "fls/find с условием",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"fls_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
											"",
											"pm.test(\"ФЛС найдены\", function () {",
											"    pm.expect(jsonData.data.items.length).to.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            [\r\n                \"BETWEEN\",\r\n                \"id\",\r\n                1,\r\n                1000\r\n            ]\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/fls/find",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"fls",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "fls/get",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"fls_number\", jsonData.data.first().fls_number);",
											"pm.environment.set(\"fls_unom\", jsonData.data.first().unom);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\": [\r\n        {{fls_id}}\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/fls/get",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"fls",
										"get"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "basic"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Портал",
			"item": [
				{
					"name": "01. Пользователи",
					"item": [
						{
							"name": "1. Поиск пользователя по email",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"ssoid\", jsonData.data.items.first());",
											"",
											"pm.test(\"Пользователь найден\", function () {",
											"    pm.expect(jsonData.data.items.length).to.least(1);",
											"});",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"condition\": {\n            \"email\": \"{{email}}\"\n        }\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/user/find",
									"host": [
										"{{portal}}"
									],
									"path": [
										"user",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение пользователя по ssoid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"codes\": [\n        \"{{ssoid}}\"\n    ],\n    \"source\": \"mobile\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/user/get",
									"host": [
										"{{portal}}"
									],
									"path": [
										"user",
										"get"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "02. Результаты работ",
					"item": [
						{
							"name": "1. Поиск результатов работ",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"result_id\", jsonData.data.items.first());",
											"pm.environment.set(\"id\", jsonData.data.items.first());",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sort\": {\n        \"id\": \"desc\",\n        \"updated_at\": \"asc\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/result/find",
									"host": [
										"{{portal}}"
									],
									"path": [
										"result",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Поиск опубликованного сообщения (issue_id)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"issue_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
											"",
											"pm.test(\"Проверка\", function () {",
											"    pm.expect(jsonData.data.items.length).to.above(0);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            [\r\n                \"=\", \"issue.status_code\", \"answer_preparing\"\r\n            ],\r\n            [\r\n                \"=\", \"issue.public_status_code\", \"affirmed\"\r\n            ]\r\n\r\n        ]\r\n    },\r\n    \"sort\": {\r\n        \"id\": \"desc\"\r\n    },\r\n    \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pos}}/issue/find",
									"host": [
										"{{pos}}"
									],
									"path": [
										"issue",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Поиск объектов (object_id)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"object_id\", jsonData.data.items.first());"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pdo}}/facility/find",
									"host": [
										"{{pdo}}"
									],
									"path": [
										"facility",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Поиск файла (file_id)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var file_id = jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)];",
											"var file_id1 = jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)];",
											"var file_id2 = jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)];",
											"pm.environment.set(\"file_id\", file_id);",
											"pm.environment.set(\"file_id1\", file_id1);",
											"pm.environment.set(\"file_id2\", file_id2);",
											"",
											"pm.test(\"Файл найден\", function () {",
											"    pm.expect(file_id).to.least(1);",
											"    pm.expect(file_id1).to.least(1);",
											"    pm.expect(file_id2).to.least(1);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"ssoid\", \"{{ssoid}}\"\n            ]\n        ]\n    },\n    \"limit\":100\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{media}}/bunch/find",
									"host": [
										"{{media}}"
									],
									"path": [
										"bunch",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Добавление результата (result_id)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"try {",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"id\", jsonData.data.id);",
											"}catch(e){pm.test(\"Ошибка\", () => {throw new Error(e.message)});}"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var dateNow = new Date();  ",
											"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 1)).toISOString().substr(0,10);",
											"//postman.setEnvironmentVariable(\"future_date\", futureDate);",
											"postman.setEnvironmentVariable(\"future_date\", \"2021-11-01\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n     \"issue_id\": {{issue_id}},\n     \"object_id\": {{object_id}},\n     \"before_photo_id\": {{file_id1}},\n     \"after_photo_id\": {{file_id2}},\n     \"period_date\": \"{{future_date}}\",\n     \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/result/add",
									"host": [
										"{{portal}}"
									],
									"path": [
										"result",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "6. Получение результата работ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        {{id}}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/result/get",
									"host": [
										"{{portal}}"
									],
									"path": [
										"result",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "7. Удаление результата работ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        {{id}}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/result/delete",
									"host": [
										"{{portal}}"
									],
									"path": [
										"result",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "8. data/results/find",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Время ответа: \" + pm.response.responseTime + \"мс, должно быть меньше 1 секунды\", () => {",
											"    pm.expect(pm.response.responseTime).to.be.below(3000);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var dateNow = new Date();  ",
											"postman.setEnvironmentVariable(\"timestamp\", Math.round(new Date().getTime()/1000));",
											"",
											"/*",
											"pm.request.headers.add({",
											"    'key': \"user-agent\",",
											"    'value': \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36\"",
											"});",
											"*/"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"period\": \"2021-8\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{gorod}}/data/results/find",
									"host": [
										"{{gorod}}"
									],
									"path": [
										"data",
										"results",
										"find"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "03. Новости",
					"item": [
						{
							"name": "Мобилка",
							"item": [
								{
									"name": "1. Поиск новости (Мобилка)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.items.first());"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var dateNow = new Date();  ",
													"postman.setEnvironmentVariable(\"timestamp\", Math.round(new Date().getTime()/1000));",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"date_publish\": \"desc\"\n    },\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"published\": true\n            },\n            {\n                \"is_volunteer\": false\n            },\n            [\n                \"<\",\n                \"date_publish\",\n                1619693823\n            ]\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/news/find",
											"host": [
												"{{portal}}"
											],
											"path": [
												"news",
												"find"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Новости",
							"item": [
								{
									"name": "1. Поиск новости",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.items.first());"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var dateNow = new Date();  ",
													"postman.setEnvironmentVariable(\"timestamp\", Math.round(new Date().getTime()/1000));",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"date_publish\": \"desc\"\n    },\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\", \"published\", true\n            ],\n            [\n                \"=\", \"is_volunteer\", false\n            ],\n            [\n                \"<\", \"date_publish\", {{timestamp}}\n            ]\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/news/find",
											"host": [
												"{{portal}}"
											],
											"path": [
												"news",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Получение новости",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Новость найдена\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().id).to.above(0);",
													"});",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 30)).toISOString().substr(0,10);",
													"postman.setEnvironmentVariable(\"future_date\", futureDate);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        {{id}}\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/news/get",
											"host": [
												"{{portal}}"
											],
											"path": [
												"news",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. data/news/find",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Время ответа: \" + pm.response.responseTime + \"мс, должно быть меньше 1 секунды\", () => {",
													"    pm.expect(pm.response.responseTime).to.be.below(1000);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var dateNow = new Date();  ",
													"postman.setEnvironmentVariable(\"timestamp\", Math.round(new Date().getTime()/1000));",
													"",
													"/*",
													"pm.request.headers.add({",
													"    'key': \"user-agent\",",
													"    'value': \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36\"",
													"});",
													"*/"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"page\": 1,\n    \"search\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{gorod}}/data/news/find",
											"host": [
												"{{gorod}}"
											],
											"path": [
												"data",
												"news",
												"find"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "\"Интересно\" для новостей",
							"item": [
								{
									"name": "1. Поиск с признаком \"Интересно\" (\"Интересно\" для новостей)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.items.first());"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\",\n        \"updated_at\": \"asc\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/interesting/find",
											"host": [
												"{{portal}}"
											],
											"path": [
												"interesting",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Удаляем последнюю новость из интересно",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/interesting/delete",
											"host": [
												"{{portal}}"
											],
											"path": [
												"interesting",
												"delete"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Поиск новости (\"Интересно\" для новостей)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"news_id\", jsonData.data.items.last());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/news/find",
											"host": [
												"{{portal}}"
											],
											"path": [
												"news",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Добавляем последнюю новость в интересно (\"Интересно\" для новостей)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"try{",
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.id);",
													"}",
													"catch(e){",
													"pm.test(\"Такой News Id уже существует\", function () {",
													"        postman.setNextRequest(\"2. Удаляем последнюю новость из интересно\");",
													"    });",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"news_id\": {{news_id}},\n    \"user_ssoid\": \"{{ssoid}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/interesting/add",
											"host": [
												"{{portal}}"
											],
											"path": [
												"interesting",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "5. Поиск с признаком \"Интересно\" (\"Интересно\" для новостей) Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.items.first());"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\",\n        \"updated_at\": \"asc\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/interesting/find",
											"host": [
												"{{portal}}"
											],
											"path": [
												"interesting",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "6. Получение с признаком \"Интересно\" (\"Интересно\" для новостей)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"codes\": [\n    \"{{id}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/interesting/get",
											"host": [
												"{{portal}}"
											],
											"path": [
												"interesting",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "7.  Удаляем новость из интересно",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/interesting/delete",
											"host": [
												"{{portal}}"
											],
											"path": [
												"interesting",
												"delete"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "04. Статические страницы",
					"item": [
						{
							"name": "1. Поиск страниц",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/page/find",
									"host": [
										"{{portal}}"
									],
									"path": [
										"page",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Правила модерации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"codes\": [\n    \"user_agreement\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/page/get",
									"host": [
										"{{portal}}"
									],
									"path": [
										"page",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Регламент обработки информации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"codes\": [\n    \"information_processing_regulations\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/page/get",
									"host": [
										"{{portal}}"
									],
									"path": [
										"page",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Соглашение о пользовании",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"codes\": [\n    \"user_agreement\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/page/get",
									"host": [
										"{{portal}}"
									],
									"path": [
										"page",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. page/find Получение идентификаторов",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.items.first());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\":{\n        \"published\":true\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/page/find",
									"host": [
										"{{portal}}"
									],
									"path": [
										"page",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "6. page/get Получение полной информации",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"codes\":[\"{{id}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/page/get",
									"host": [
										"{{portal}}"
									],
									"path": [
										"page",
										"get"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "05. Избранное",
					"item": [
						{
							"name": "Избранные объекты",
							"item": [
								{
									"name": "Мобилка",
									"item": [
										{
											"name": "1.1. Объекты. Мобилка. favorite/object/find Получение идентификаторов.",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"id\", jsonData.data.items.first());"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": {\n            \"ssoid\": \"{{ssoid}}\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{portal}}/favorite/object/find",
													"host": [
														"{{portal}}"
													],
													"path": [
														"favorite",
														"object",
														"find"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Реальные объекты",
									"item": [
										{
											"name": "1.2.  Реальные объекты. Поиск объектов (object_id)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"object_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length) + 1]);",
															"",
															"//pm.test(\"Объект найден\", function () {",
															"//    var jsonData = pm.response.json();",
															"//    pm.expect(jsonData.data.items.first()).to.eql(200);",
															"//});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\",  \"is_real\", 1\n            ],\n            [\n                \"=\", \"category.id\", [1, 2, 4, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 32, 36]\n            ]\n        ]\n    },  \n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "1.3. Реальные объекты. Информация об объекте Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"district_id\", jsonData.data.first().district.first().id);",
															"pm.environment.set(\"region_id\", jsonData.data.first().region.first().id);",
															""
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"//pm.environment.set(\"object_id\", 548799);",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/facility/get",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"facility",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "1.4. Реальные объекты. favorite/object/add Добавление записи",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"id\", jsonData.data.id);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ssoid\": \"{{ssoid}}\",\n    \"object_id\": {{object_id}},\n    \"district_id\": {{district_id}},\n    \"region_id\": {{region_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{portal}}/favorite/object/add",
													"host": [
														"{{portal}}"
													],
													"path": [
														"favorite",
														"object",
														"add"
													]
												}
											},
											"response": []
										},
										{
											"name": "1.5. Реальные объекты. favorite/object/get Получение полной информации",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ids\": [\n        {{id}}\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{portal}}/favorite/object/get",
													"host": [
														"{{portal}}"
													],
													"path": [
														"favorite",
														"object",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "1.6. Реальные объекты. favorite/object/delete Удаление записи",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"setTimeout(function(){}, 500);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ids\": [\n        {{id}}\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{portal}}/favorite/object/delete",
													"host": [
														"{{portal}}"
													],
													"path": [
														"favorite",
														"object",
														"delete"
													]
												}
											},
											"response": []
										},
										{
											"name": "1.7. Реальные объекты. favorite/object/find Получение идентификаторов",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"id\", jsonData.data.items.first());"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filter\": {\n        \"condition\": {\n            \"ssoid\": \"{{ssoid}}\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{portal}}/favorite/object/find",
													"host": [
														"{{portal}}"
													],
													"path": [
														"favorite",
														"object",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "1.8. Реальные объекты. favorite/object/get Получение с экспандом",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"district_id\", jsonData.data.first().district_id);",
															"pm.environment.set(\"region_id\", jsonData.data.first().region_id);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ids\": [\n        {{id}}\n    ],\n    \"expand\": [\n        \"object\"\n    ],\n    \"limit\": 100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{portal}}/favorite/object/get",
													"host": [
														"{{portal}}"
													],
													"path": [
														"favorite",
														"object",
														"get"
													]
												}
											},
											"response": []
										},
										{
											"name": "1.9. Реальные объекты. favorite/object/toggle Добавление новой, если запись не существует или удаление - если существует",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															"setTimeout(function(){}, 500);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ssoid\": \"{{ssoid}}\",\n    \"object_id\": {{object_id}},\n    \"district_id\": {{district_id}},\n    \"region_id\": {{region_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{portal}}/favorite/object/toggle",
													"host": [
														"{{portal}}"
													],
													"path": [
														"favorite",
														"object",
														"toggle"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Виртуальные объекты",
									"item": [
										{
											"name": "1.10. Виртуальные объекты. Поиск адресов",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"address_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
															"",
															"pm.test(\"Адреса найдены\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.data.total).to.be.above(0);",
															"});",
															"",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"type": "text",
														"value": "developer"
													},
													{
														"key": "system-password",
														"type": "text",
														"value": "demo"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 10000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pdo}}/address/find",
													"host": [
														"{{pdo}}"
													],
													"path": [
														"address",
														"find"
													]
												}
											},
											"response": []
										},
										{
											"name": "1.11. Виртуальные объекты. favorite/object/add Добавление записи Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"id\", jsonData.data.id);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "system-name",
														"value": "developer",
														"type": "text"
													},
													{
														"key": "system-password",
														"value": "demo",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ssoid\": \"{{ssoid}}\",\n    \"address_id\": {{address_id}},\n    \"category_id\": 6,\n    \"district_id\": 1,\n    \"region_id\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{portal}}/favorite/object/add",
													"host": [
														"{{portal}}"
													],
													"path": [
														"favorite",
														"object",
														"add"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Избранные сообщения",
							"item": [
								{
									"name": "2.1. Избранные сообщения. Добавление в избранное",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.id);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ssoid\": \"{{ssoid}}\",\n  \"issue_id\": {{issue_id}},\n  \"theme_id\": {{theme_id}},\n  \"category_id\": {{category_id}},\n  \"issue_publish_date\": {{issue_created_at}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/favorite/issue/add",
											"host": [
												"{{portal}}"
											],
											"path": [
												"favorite",
												"issue",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "2.2. Избранные сообщения. Поиск избранных сообщений",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Есть избранные сообщения\", function () {",
													"    pm.expect(jsonData.data.items.length).to.above(0);",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": {\n            \"ssoid\": \"{{ssoid}}\"\n        }\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/favorite/issue/find",
											"host": [
												"{{portal}}"
											],
											"path": [
												"favorite",
												"issue",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "2.3. Избранные сообщения. Посмотреть избранное",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"expand\": [\n        \"issue\",\n        \"object\",\n        \"address\",\n        \"comments.attachments\"\n    ],\n    \"ids\": [\n        {{id}}\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/favorite/issue/get",
											"host": [
												"{{portal}}"
											],
											"path": [
												"favorite",
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "2.4. Избранные сообщения. Получение избранных сообщений у пользователя",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"codes\": [\n        \"{{ssoid}}\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/user/get",
											"host": [
												"{{portal}}"
											],
											"path": [
												"user",
												"get"
											]
										},
										"description": "Альтернативный способ, избранные сообщения в параметре issue_id, он возвращается если сообщения у пользователя были"
									},
									"response": []
								},
								{
									"name": "2.5. Избранные сообщения. Поиск всех сообщений пользователя в ПОС",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Проверка\", function () {",
													"    pm.expect(jsonData.data.items.length).to.above(0);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\",\n                \"user.ssoid\",\n                \"{{ssoid}}\"\n            ]\n        ]\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "2.6. Избранные сообщения. Информация по сообщению",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"//pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"//pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"",
													"//pm.environment.set(\"issue_theme_id\", jsonData.data.first().theme_id);",
													"//pm.environment.set(\"issue_created_at\", jsonData.data.first().created_at);",
													"",
													"var a = jsonData.data.first().attrs",
													"//идем внутрь attrs",
													"for (var i = 0; i < a.length; i++) {",
													"    //записываем значение, если оно есть",
													"    if (a[i].issue_attribute_code == \"object_id\")",
													"        pm.environment.set(\"object_id\", a[i].value);",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//чтобы вызвать конкретный issue_id",
													"//pm.environment.set(\"issue_id\", 123);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "2.7. Избранные сообщения. Информация об объекте",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"category_id\", jsonData.data.first().category.id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 123);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [\"{{object_id}}\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "2.8. Избранные сообщения. Удаление из избранного",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.unset('id');",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"setTimeout(function(){}, 500);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/favorite/issue/delete",
											"host": [
												"{{portal}}"
											],
											"path": [
												"favorite",
												"issue",
												"delete"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Избранные адреса",
							"item": [
								{
									"name": "3.1. Избранные адреса. Поиск адресов",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);",
													"",
													"pm.test(\"Адреса найдены\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.total).to.be.above(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\": 1000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "3.2. Избранные адреса. Информация об адресе",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"address_id\", jsonData.data.first().id);",
													"pm.environment.set(\"region_id\", jsonData.data.first().region.id);",
													"pm.environment.set(\"district_id\", jsonData.data.first().region.district.id);",
													"",
													"pm.test(\"Информация по объекту корректная\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.first().unom).to.above(0);",
													"    pm.expect(jsonData.data.first().region.id).to.above(0);",
													"    pm.expect(jsonData.data.first().region.district.id).to.above(0);",
													"    pm.expect(jsonData.data.first().geo_point.type).to.equal(\"Point\");",
													"    pm.expect(jsonData.data.first().geo_polygon.type).to.be.oneOf([\"Polygon\", \"MultiPolygon\"]);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{address_id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/address/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"address",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "3.3. Избранные адреса. Добавление адреса в избранное",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.id);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ssoid\": \"{{ssoid}}\",\n  \"address_id\": {{address_id}},\n  \"district_id\": {{district_id}},\n  \"region_id\": {{region_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/favorite/address/add",
											"host": [
												"{{portal}}"
											],
											"path": [
												"favorite",
												"address",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "3.4. Избранные адреса. Избранные адреса у пользователя",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Есть избранные адреса\", function () {",
													"    pm.expect(jsonData.data.items.length).to.above(0);",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": {\n            \"ssoid\": \"{{ssoid}}\"\n        }\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/favorite/address/find",
											"host": [
												"{{portal}}"
											],
											"path": [
												"favorite",
												"address",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "3.5. Избранные адреса. Удаление избранного адреса",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id\", jsonData.data.id);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\":[{{id}}]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/favorite/address/delete",
											"host": [
												"{{portal}}"
											],
											"path": [
												"favorite",
												"address",
												"delete"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "06. ФЛС",
					"item": [
						{
							"name": "1. fls/find Получение идентификаторов",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.environment.set(\"items\", jsonData.data.items);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/fls/find",
									"host": [
										"{{portal}}"
									],
									"path": [
										"fls",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. fls/get Получение полной информации",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"postman.setEnvironmentVariable(\"response\", jsonData);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        {{items}}\n        ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/fls/get",
									"host": [
										"{{portal}}"
									],
									"path": [
										"fls",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. fls/find Получение записи",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.items.first());"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"condition\": {\n      \"user_ssoid\": \"{{ssoid}}\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/fls/find",
									"host": [
										"{{portal}}"
									],
									"path": [
										"fls",
										"find"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07. ОМС",
					"item": [
						{
							"name": "1. oms/find Получение идентификаторов",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.environment.set(\"id\", jsonData.data.items.first());\r",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/oms/find",
									"host": [
										"{{portal}}"
									],
									"path": [
										"oms",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. oms/get Получение полной информации",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();\r",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        {{id}}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/oms/get",
									"host": [
										"{{portal}}"
									],
									"path": [
										"oms",
										"get"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "10. Обратная связь",
					"item": [
						{
							"name": "1. edo find",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n      \n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/edo/find",
									"host": [
										"{{portal}}"
									],
									"path": [
										"edo",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. edo get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\":[\n        {{id}}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/edo/get",
									"host": [
										"{{portal}}"
									],
									"path": [
										"edo",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. hpsm find",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/hpsm/find",
									"host": [
										"{{portal}}"
									],
									"path": [
										"hpsm",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. hpsm get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        {{id}}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/hpsm/get",
									"host": [
										"{{portal}}"
									],
									"path": [
										"hpsm",
										"get"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "11. Черновики",
					"item": [
						{
							"name": "1. draft/find Получение идентификаторов",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.environment.set(\"id\", jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)]);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"condition\": {\n            \"ssoid\": \"{{ssoid}}\"\n        }\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/draft/find",
									"host": [
										"{{portal}}"
									],
									"path": [
										"draft",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. draft/get Получение полной информации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        {{id}}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/draft/get",
									"host": [
										"{{portal}}"
									],
									"path": [
										"draft",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. draft/add Добавление записи",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssoid\": \"{{ssoid}}\",\n    \"theme_id\": {{theme_id}},\n    \"attrs\": [\n        {\n            \"issue_attribute_code\": \"landscape\",\n            \"value_id\": 16\n        },\n        {\n            \"issue_attribute_code\": \"landscape_problem\",\n            \"value_ids\": [\n                4,\n                5,\n                18\n            ]\n        },\n        {\n            \"issue_attribute_code\": \"latitude\",\n            \"value\": \"37.622504\"\n        },\n        {\n            \"issue_attribute_code\": \"longitude\",\n            \"value\": \"55.753215\"\n        },\n        {\n            \"issue_attribute_code\": \"object_id\",\n            \"value\": 42245\n        }\n    ],\n    \"attachments\": [\n        {\n            \"file_id\": {{file_id}}\n        }\n    ],\n    \"text\": \"Значимость этих проблем настолько очевидна\",\n    \"active_tab\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/draft/add",
									"host": [
										"{{portal}}"
									],
									"path": [
										"draft",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. draft/update Обновление записи",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {{id}},\n    \"ssoid\": \"{{ssoid}}\",\n    \"theme_id\": \"{{theme_id}}\",\n    \"attrs\": [\n        {\n            \"issue_attribute_code\": \"landscape\",\n            \"value_id\": 16\n        },\n        {\n            \"issue_attribute_code\": \"landscape_problem\",\n            \"value_ids\": [\n                4,\n                5,\n                18\n            ]\n        },\n        {\n            \"issue_attribute_code\": \"latitude\",\n            \"value\": \"37.622504\"\n        },\n        {\n            \"issue_attribute_code\": \"longitude\",\n            \"value\": \"55.753215\"\n        },\n        {\n            \"issue_attribute_code\": \"object_id\",\n            \"value\": 42245\n        }\n    ],\n    \"attachments\": [\n        {\n            \"file_id\": 8\n        }\n    ],\n    \"text\": \"Значимость этих проблем настолько очевидна\",\n    \"active_tab\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/draft/update",
									"host": [
										"{{portal}}"
									],
									"path": [
										"draft",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. draft/delete Удаление записи",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        {{id}}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/draft/delete",
									"host": [
										"{{portal}}"
									],
									"path": [
										"draft",
										"delete"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "12. Темы",
					"item": [
						{
							"name": "1. Получение дерева тем без параметров Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"//pm.environment.set(\"object_id\", jsonData.data[Math.floor(Math.random()*jsonData.data.length)]);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"url": {
									"raw": "{{gorod}}/api/service/special/theme/tree/list",
									"host": [
										"{{gorod}}"
									],
									"path": [
										"api",
										"service",
										"special",
										"theme",
										"tree",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Проверка страницы на портале Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//var body = pm.response.body();",
											"",
											"//pm.test(\"Проверка названия\", function () {",
											"//    pm.expect(body.head.title).to.equal(pm.environment.get(\"object_name\"));",
											"//});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"theme_tree_id\", 12139);",
											"",
											"pm.environment.set(\"file_url\", pm.environment.get(\"portal_web\") + \"/themes/\" + pm.environment.get(\"theme_tree_id\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password_b}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username_b}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "debug-enabled",
										"value": "1",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{file_url}}",
									"host": [
										"{{file_url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "13. Проверить главную страницу",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password_b}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username_b}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "debug-enabled",
								"type": "text",
								"value": "1",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{portal_web}}",
							"host": [
								"{{portal_web}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Сервис уведомлений",
			"item": [
				{
					"name": "01. my-tech.mos.ru",
					"item": [
						{
							"name": "1. Поиск пользователя по email",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"ssoid\", jsonData.data.items.first());",
											"",
											"pm.test(\"Пользователь найден\", function () {",
											"    pm.expect(jsonData.data.items.length).to.least(1);",
											"});",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"condition\": {\n            \"email\": \"{{email}}\"\n        }\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{portal}}/user/find",
									"host": [
										"{{portal}}"
									],
									"path": [
										"user",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "Проверка пушей в ЕЛК (тех)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Включаем проверку на код 200",
											"pm.environment.set(\"test_code_200\", 'true');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//Отключаем проверку на код 200",
											"pm.environment.set(\"test_code_200\", 'false');",
											"// проверка пушей на тех https://my-tech.mos.ru/my/#/settings/notifications/all2"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:sub=\"urn://subscription.api.emp.altarix.ru\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <sub:sendSubscriptionStreamEventsRequest>\n            <sub:token>5b5b11cb57b5a84874ead34c85b6d64a</sub:token>\n            <sub:id>39121674-0fdf-4263-a251-8dfabecfc5f6</sub:id>\n            <sub:systemId>SOESG</sub:systemId>\n            <sub:datetime>2021-03-17T18:51:22.711969</sub:datetime>\n            <sub:events>\n                <!--1 or more repetitions:-->\n                <sub:event>\n                    <sub:id>3bafc901-d89c-40a7-a128-d24fdd250e30</sub:id>\n                    <sub:streamId>6</sub:streamId>\n                    <sub:typeId>3</sub:typeId>\n                    <sub:filters operator=\"OR\">\n                        <sub:filter operator=\"AND\">\n                            <sub:persons operator=\"OR\">\n                                <sub:person>\n                                    <sub:SSOID>5d7f980a-0cb3-420d-9a5b-c1facb744b0d</sub:SSOID>\n                                </sub:person>\n                            </sub:persons>\n                        </sub:filter>\n                    </sub:filters>\n                    <sub:message>\n                        <sub:parameters>\n                            <!--1 or more repetitions:-->\n                            <sub:parameter>\n                                <sub:name>PUSH_TEXT</sub:name>\n                                <sub:value>test!!!test!!!test!!!</sub:value>\n                            </sub:parameter>\n                            <sub:parameter>\n                                <sub:name>ELK_INT_ID</sub:name>\n                                <sub:value>10000016</sub:value>\n                            </sub:parameter>\n                        </sub:parameters>\n\n                    </sub:message>\n                    <sub:datetime>2021-03-17T18:51:22.711969</sub:datetime>\n                </sub:event>\n            </sub:events>\n        </sub:sendSubscriptionStreamEventsRequest>\n    </soapenv:Body>\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "http://api.uat.emp.mos.ru:8090/ws/subscriptions/?wsdl=",
									"protocol": "http",
									"host": [
										"api",
										"uat",
										"emp",
										"mos",
										"ru"
									],
									"port": "8090",
									"path": [
										"ws",
										"subscriptions",
										""
									],
									"query": [
										{
											"key": "wsdl",
											"value": ""
										}
									]
								},
								"description": "https://my-tech.mos.ru/my/#/settings/notifications/all2"
							},
							"response": []
						}
					]
				},
				{
					"name": "02. Справочник рассылок",
					"item": [
						{
							"name": "1. Справочник рассылок",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.items);",
											"",
											"/*",
											"pm.test(\"Найден 1 объект\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.total).to.equal(1);",
											"});",
											"*/"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "auth_service",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "DGe9JWPYUkYkq4Zw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sort\": {\n        \"id\": \"asc\"\n    },\n    \"filter\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/find",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Посмотреть рассылки",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "auth_service",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "DGe9JWPYUkYkq4Zw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [1,2,3,4,5,6,7]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/get",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"get"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "03. Уведомления у пользователя",
					"item": [
						{
							"name": "1. Поиск подписки у пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.items.first());"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"condition\": {\n            \"ssoid\": \"{{ssoid}}\",\n            \"subscription_id\": 2\n        }\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/settings/find",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"settings",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Удаление у пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//Включаем проверку на код 200",
											"pm.environment.set(\"test_code_200\", 'true');",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var dateNow = new Date();  ",
											"var today = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
											"postman.setEnvironmentVariable(\"today\", today);",
											"",
											"//Отключаем проверку на код 200",
											"pm.environment.set(\"test_code_200\", 'false');"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [{{id}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/settings/delete",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"settings",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Создание у пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//Включаем проверку на код 200",
											"pm.environment.set(\"test_code_200\", 'true');",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var dateNow = new Date();  ",
											"var today = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
											"postman.setEnvironmentVariable(\"today\", today);",
											"",
											"//Отключаем проверку на код 200",
											"pm.environment.set(\"test_code_200\", 'false');"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssoid\": \"{{ssoid}}\",\n    \"subscription_id\": \"2\",\n    \"is_email_active\": true,\n    \"is_push_active\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/settings/add",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"settings",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Поиск подписок у пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.items.first());"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"condition\": {\n            \"ssoid\": \"{{ssoid}}\"\n        }\n    },\n    \"sort\": {\n        \"id\": \"desc\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/settings/find",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"settings",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Обновление подписки у пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {{id}},\n    \"is_email_active\": false,\n    \"is_push_active\": true,\n    \"ssoid\": \"{{ssoid}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/settings/update",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"settings",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "6. Получение подписок у пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Подписка верная\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.first().is_email_active).to.equal(false);",
											"    pm.expect(jsonData.data.first().is_push_active).to.equal(true);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [{{id}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/settings/get",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"settings",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "7. Обновление подписки у пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {{id}},\n    \"is_email_active\": true,\n    \"is_push_active\": true,\n    \"ssoid\": \"{{ssoid}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/settings/update",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"settings",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "8. Получение подписок у пользователя Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Подписка верная\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.first().is_email_active).to.equal(true);",
											"    pm.expect(jsonData.data.first().is_push_active).to.equal(true);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "developer",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [{{id}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/settings/get",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"settings",
										"get"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "04. Время уведомлений у пользователя",
					"item": [
						{
							"name": "1. Поиск времени у пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var itemLength = jsonData.data.items;",
											"pm.environment.set(\"id\", jsonData.data.items.first());",
											"if(pm.environment.get(\"id\") == null ) {",
											"postman.setNextRequest(\"3. Создание времени\")",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dateNow = new Date();  ",
											"var today = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
											"postman.setEnvironmentVariable(\"today\", today);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"filter\": {\n        \"condition\": {\n            \"ssoid\": \"{{ssoid}}\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/time/find",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"time",
										"find"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Получение времени у пользователя",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dateNow = new Date();  ",
											"var today = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
											"postman.setEnvironmentVariable(\"today\", today);",
											"pm.test(\"body`s id\", function (){",
											"    pm.expect(pm.environment.get(\"id\")).to.be.not.equal(null);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var dataResponse = pm.response.json();\r",
											"var dataLength = dataResponse.data.length;\r",
											"if(dataLength > 0) {\r",
											"postman.setNextRequest(\"5. Удаление времени\")\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [{{id}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/time/get",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"time",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Создание времени",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"id\", jsonData.data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dateNow = new Date();  ",
											"var today = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
											"postman.setEnvironmentVariable(\"today\", today);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssoid\": \"{{ssoid}}\",\n    \"time_from\": \"08:00:00\",\n    \"time_to\":\"21:00:00\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/time/add",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"time",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Обновление времени",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var dateNow = new Date();  ",
											"var today = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
											"postman.setEnvironmentVariable(\"today\", today);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {{id}},\n    \"time_from\": \"09:00:00\",\n    \"time_to\":\"23:59:59\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/time/update",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"time",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Удаление времени",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dateNow = new Date();  ",
											"var today = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
											"postman.setEnvironmentVariable(\"today\", today);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [{{id}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/subscriptions/time/delete",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"subscriptions",
										"time",
										"delete"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "05. Отправка обычного письма",
					"item": [
						{
							"name": "1. Отправка простого уведомления с вложением",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var dateNow = new Date();  ",
											"var today = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
											"postman.setEnvironmentVariable(\"today\", today);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "demo"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sender_id\": \"Postman\",\n  \"recipient_id\": \"2\",\n  \"recipient_name\": \"Фамилия Имя\",\n  \"title\": \"Заголовок письма {{today}}\",\n  \"body\": \"Some body <b>bold</b> text\",\n  \"attachments\": {\n    \"file1.txt\": \"U29tZSB0ZXh0IGV4YW1wbGU=\",\n    \"file{{today}}.txt\": \"U29tZSB0ZXh0IGV4YW1wbGU=\"\n  },\n  \"emails\": [\n    \"{{email}}\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/message/create",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"message",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Отправка уведомления (регистрация)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var dateNow = new Date();  ",
											"var today = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
											"postman.setEnvironmentVariable(\"today\", today);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"value": "demo",
										"type": "text"
									},
									{
										"key": "system-password",
										"value": "demo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sender_id\": \"Postman\",\n  \"recipient_id\": \"{{ssoid}}\",\n  \"template_name\": \"auth_app_registration\",\n  \"template_data\": {\n\t\"username\": \"Станислав Волегов\",\n\t\"reset_link\": \"http://google.com/\"\n  },\n  \"recipient_name\": \"recipient_name\",\n  \"title\": \"Заголовок письма {{today}}\",\n  \"body\": \"Some body text\",\n  \"attachments\": {\n  },\n  \"emails\": [\n    \"{{email}}\"\n  ],\n  \"send_at\": {{$timestamp}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{mailer}}/message/create",
									"host": [
										"{{mailer}}"
									],
									"path": [
										"message",
										"create"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "06. Проверка PUSH",
					"item": [
						{
							"name": "1. После создания сообщения",
							"item": [
								{
									"name": "1. Поиск пользователя по email",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"ssoid\", jsonData.data.items.first());",
													"",
													"pm.test(\"Пользователь найден\", function () {",
													"    pm.expect(jsonData.data.items.length).to.least(1);",
													"});",
													"",
													"//pm.environment.set(\"ssoid\", \"db1e3ebe-c15f-40d7-a75a-a9ad18eefd27\");",
													"",
													"//pm.environment.set(\"ssoid\", \"3ffd3882-7a57-459b-9f90-3f6f8ac56ae8\");",
													"",
													"//pm.environment.set(\"ssoid\", \"b79517d7-0197-4b9a-9414-78b3e5b354a0\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": {\n            \"email\": \"{{email}}\"\n        }\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/user/find",
											"host": [
												"{{portal}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Поиск своего сообщения на модерации",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_id\", jsonData.data.items.first());"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            [\r\n                \"=\",\r\n                \"issue.public_status_code\",\r\n                \"under_moderation\"\r\n            ],\r\n            [\r\n                \"=\",\r\n                \"user.ssoid\",\r\n                \"{{ssoid}}\"\r\n            ]\r\n        ]\r\n    },\r\n    \"sort\": {\r\n        \"id\": \"desc\"\r\n    },\r\n    \"limit\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Информация по сообщению",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_data\", JSON.stringify(jsonData.data.first()));",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//чтобы вызвать конкретный issue_id",
													"//pm.environment.set(\"issue_id\", 10004784);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Отправка уведомления (сообщение на модерации)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
													"postman.setEnvironmentVariable(\"today\", futureDate);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender_id\": \"Postman\",\n  \"recipient_id\": \"{{ssoid}}\",\n  \"template_name\": \"pos_issue_message_on_moderation\",\n  \"template_data\": {{issue_data}},\n  \"recipient_name\": \"Фамилия Имя\",\n  \"title\": \"Заголовок письма {{today}}\",\n  \"body\": \"Some body text\",\n  \"attachments\": {\n  },\n  \"emails\": [\n    \"{{email}}\"\n  ],\n  \"send_at\": {{$timestamp}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{mailer}}/message/create",
											"host": [
												"{{mailer}}"
											],
											"path": [
												"message",
												"create"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "2. После публикации сообщения",
							"item": [
								{
									"name": "1. Поиск опубликованного сообщения",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_id\", jsonData.data.items.first());"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"ssoid\", \"db1e3ebe-c15f-40d7-a75a-a9ad18eefd27\");",
													"",
													"//pm.environment.set(\"ssoid\", \"3ffd3882-7a57-459b-9f90-3f6f8ac56ae8\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            [\r\n                \"=\",\r\n                \"issue.status_code\",\r\n                \"answer_preparing\"\r\n            ],\r\n            [\r\n                \"=\",\r\n                \"issue.public_status_code\",\r\n                \"affirmed\"\r\n            ],\r\n            [\r\n                \"=\",\r\n                \"user.ssoid\",\r\n                \"{{ssoid}}\"\r\n            ]\r\n\r\n        ]\r\n    },\r\n    \"sort\": {\r\n        \"id\": \"desc\"\r\n    },\r\n    \"limit\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Информация по сообщению",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_data\", JSON.stringify(jsonData.data.first()));",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//чтобы вызвать конкретный issue_id",
													"//pm.environment.set(\"issue_id\", 10004784);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Отправка уведомления (сообщение опубликовано)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
													"postman.setEnvironmentVariable(\"today\", futureDate);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender_id\": \"Postman\",\n  \"recipient_id\": \"{{ssoid}}\",\n  \"template_name\": \"pos_issue_publish\",\n  \"template_data\": {{issue_data}},\n  \"recipient_name\": \"recipient_name\",\n  \"title\": \"Заголовок письма {{today}}\",\n  \"body\": \"Some body text\",\n  \"attachments\": {\n  },\n  \"emails\": [\n    \"{{email}}\"\n  ],\n  \"send_at\": {{$timestamp}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{mailer}}/message/create",
											"host": [
												"{{mailer}}"
											],
											"path": [
												"message",
												"create"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "3. После отклонения сообщения модератором",
							"item": [
								{
									"name": "1. Поиск своего сообщения на модерации",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_id\", jsonData.data.items.first());"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            [\r\n                \"=\",\r\n                \"issue.public_status_code\",\r\n                \"rejected\"\r\n            ],\r\n            [\r\n                \"=\",\r\n                \"user.ssoid\",\r\n                \"{{ssoid}}\"\r\n            ]\r\n\r\n        ]\r\n    },\r\n    \"sort\": {\r\n        \"id\": \"desc\"\r\n    },\r\n    \"limit\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Информация по сообщению",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_data\", JSON.stringify(jsonData.data.first()));",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//чтобы вызвать конкретный issue_id",
													"//pm.environment.set(\"issue_id\", 10004784);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Отправка уведомления (сообщение на модерации) Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
													"postman.setEnvironmentVariable(\"today\", futureDate);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender_id\": \"Postman\",\n  \"recipient_id\": \"{{ssoid}}\",\n  \"template_name\": \"pos_issue_message_rejection\",\n  \"template_data\": {{issue_data}},\n  \"recipient_name\": \"Фамилия Имя\",\n  \"title\": \"Заголовок письма {{today}}\",\n  \"body\": \"Some body text\",\n  \"attachments\": {\n  },\n  \"emails\": [\n    \"{{email}}\"\n  ],\n  \"send_at\": {{$timestamp}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{mailer}}/message/create",
											"host": [
												"{{mailer}}"
											],
											"path": [
												"message",
												"create"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "4. Отправляется сразу после отправки сообщения модератором на согласование/ дозаполнение",
							"item": [
								{
									"name": "1. Поиск своего сообщения на модерации",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_id\", jsonData.data.items.first());"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            [\r\n                \"=\",\r\n                \"issue.public_status_code\",\r\n                \"under_moderation\"\r\n            ],\r\n            [\r\n                \"=\",\r\n                \"user.ssoid\",\r\n                \"{{ssoid}}\"\r\n            ]\r\n\r\n        ]\r\n    },\r\n    \"sort\": {\r\n        \"id\": \"desc\"\r\n    },\r\n    \"limit\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Информация по сообщению",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_data\", JSON.stringify(jsonData.data.first()));",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//чтобы вызвать конкретный issue_id",
													"//pm.environment.set(\"issue_id\", 10004784);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Отправка уведомления (сообщение на модерации) Copy 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
													"postman.setEnvironmentVariable(\"today\", futureDate);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender_id\": \"Postman\",\n  \"recipient_id\": \"{{ssoid}}\",\n  \"template_name\": \"pos_issue_message_on_moderation\",\n  \"template_data\": {{issue_data}},\n  \"recipient_name\": \"Фамилия Имя\",\n  \"title\": \"Заголовок письма {{today}}\",\n  \"body\": \"Some body text\",\n  \"attachments\": {\n  },\n  \"emails\": [\n    \"{{email}}\"\n  ],\n  \"send_at\": {{$timestamp}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{mailer}}/message/create",
											"host": [
												"{{mailer}}"
											],
											"path": [
												"message",
												"create"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "5. Отправляется в случае поступления ответа ОИВ",
							"item": [
								{
									"name": "1. Поиск сообщения с ответом",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_id\", jsonData.data.items.first());"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            [\r\n                \"=\",\r\n                \"issue.public_status_code\",\r\n                \"waiting_resident_approval\"\r\n            ],\r\n            [\r\n                \"=\",\r\n                \"user.ssoid\",\r\n                \"{{ssoid}}\"\r\n            ]\r\n\r\n        ]\r\n    },\r\n    \"sort\": {\r\n        \"id\": \"desc\"\r\n    },\r\n    \"limit\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Информация по сообщению",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_data\", JSON.stringify(jsonData.data.first()));",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//чтобы вызвать конкретный issue_id",
													"//pm.environment.set(\"issue_id\", 10004784);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Отправка уведомления",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
													"postman.setEnvironmentVariable(\"today\", futureDate);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender_id\": \"Postman\",\n  \"recipient_id\": \"{{ssoid}}\",\n  \"template_name\": \"pos_issue_oiv_answer\",\n  \"template_data\": {{issue_data}},\n  \"recipient_name\": \"recipient_name\",\n  \"title\": \"Заголовок письма {{today}}\",\n  \"body\": \"Some body text\",\n  \"attachments\": {\n  },\n  \"emails\": [\n    \"{{email}}\"\n  ],\n  \"send_at\": {{$timestamp}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{mailer}}/message/create",
											"host": [
												"{{mailer}}"
											],
											"path": [
												"message",
												"create"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "6. Отправляется в случае поступления ответа КО",
							"item": [
								{
									"name": "1. Поиск сообщения с ответом",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_id\", jsonData.data.items.first());"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"filter\": {\r\n        \"condition\": [\r\n            \"and\",\r\n            [\r\n                \"=\",\r\n                \"issue.public_status_code\",\r\n                \"waiting_resident_approval\"\r\n            ],\r\n            [\r\n                \"=\",\r\n                \"user.ssoid\",\r\n                \"{{ssoid}}\"\r\n            ]\r\n\r\n        ]\r\n    },\r\n    \"sort\": {\r\n        \"id\": \"desc\"\r\n    },\r\n    \"limit\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Информация по сообщению",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"issue_data\", JSON.stringify(jsonData.data.first()));",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//чтобы вызвать конкретный issue_id",
													"//pm.environment.set(\"issue_id\", 10004784);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Отправка уведомления",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
													"postman.setEnvironmentVariable(\"today\", futureDate);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender_id\": \"Postman\",\n  \"recipient_id\": \"{{ssoid}}\",\n  \"template_name\": \"pos_issue_ko_answer\",\n  \"template_data\": {{issue_data}},\n  \"recipient_name\": \"recipient_name\",\n  \"title\": \"Заголовок письма {{today}}\",\n  \"body\": \"Some body text\",\n  \"attachments\": {\n  },\n  \"emails\": [\n    \"{{email}}\"\n  ],\n  \"send_at\": {{$timestamp}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{mailer}}/message/create",
											"host": [
												"{{mailer}}"
											],
											"path": [
												"message",
												"create"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const cookieJar = pm.cookies.jar();",
					"",
					"if (pm.environment.get('gorod') == 'https://gorod.mos.ru'){",
					"        cookieJar.set('https://gorod.mos.ru', \"skip_outofservice\", pm.environment.get('prod_cookie'),(error, cookies)=> {",
					"        if(error) console.log(error); });",
					"        cookieJar.get('https://gorod.mos.ru', \"skip_outofservice\", (error, cookies)=> {",
					"        if(error) console.log(error);",
					"});",
					"} ",
					"",
					"if (pm.environment.get('gorod') == 'https://gorod-tech.mos.ru' ||",
					"    pm.environment.get('gorod') == 'https://gorod-study.mos.ru') ",
					"{",
					"    pm.request.headers.add({",
					"        'key': \"Authorization\",",
					"        'value': \"Basic Z29yb2Q6dENlQ0BUR2c4TURF=\"",
					"    });",
					"}",
					"else",
					"{",
					"    pm.request.headers.add({",
					"        'key': \"Authorization\",",
					"        'value': \"Basic Z29yb2Q6cHJvMTVnb3JvZA==\"",
					"    });",
					"}",
					"",
					"if (pm.environment.get('gorod') == 'http://v2portal-themes.gorod.proitr.ru/')",
					"    {pm.environment.set(\"Username\", \"gorod\");",
					"    pm.environment.set(\"Password\", \"eUrK_2H3#?\");",
					"    }",
					"",
					"pm.request.headers.add({",
					"    'key': \"debug-enabled\",",
					"    'value': 1",
					"});",
					"",
					"pm.request.headers.add({",
					"    'key': \"user-agent\",",
					"    'value': \"Postman\"",
					"});",
					"",
					"//pm.request.url.query.add('clear_cache=1');",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log (\"Сценарий: \" + pm.info.requestName);",
					"",
					"try {",
					"        pm.test(\"Проверка на код 200\", function () ",
					"        {",
					"            //Проверяем общий код 200",
					"            pm.expect(pm.response.code).to.be.oneOf([200,201]);",
					"",
					"            //Дополнительно проверяем на код 200 в JSON",
					"            if (pm.request.method == 'POST')",
					"            {",
					"                var jsonData = pm.response.json();",
					"                pm.expect(jsonData.code).to.be.oneOf([200,201]);",
					"            }",
					"        });",
					"",
					"        if (pm.environment.get('gorod') == 'https://gorod2.mos.ru') ",
					"        {",
					"            //для город2 20 секунд",
					"            pm.test(\"Время ответа: \" + pm.response.responseTime + \"мс, должно быть меньше 20 секунд\", () => {",
					"                pm.expect(pm.response.responseTime).to.be.below(20000);",
					"            });",
					"        }",
					"        else",
					"        {",
					"            //для остальных 40 секунд",
					"            pm.test(\"Время ответа: \" + pm.response.responseTime + \"мс, должно быть меньше 40 секунд\", () => {",
					"                pm.expect(pm.response.responseTime).to.be.below(40000);",
					"            });",
					"        }",
					"",
					"}catch(e){",
					"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); ",
					"}",
					"if (pm.response.code != 200) {",
					"    pm.test(\"message: \" + pm.response.json().message, () =>{throw new Error(\"error_code: \" + pm.response.json().error_code)});",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "attribute_search_operator",
			"value": ""
		}
	]
}